{
    "sourceFile": "src/app/(main)/(pages)/settings/_component/uploadcare-button.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1717927325479,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1717928170509,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,27 +26,22 @@\n     if (ctxProviderRef.current) {\r\n       ctxProviderRef.current.addEventListener('file-upload-success', handleUpload)\r\n     }\r\n \r\n-    return () => {\r\n-      if (ctxProviderRef.current) {\r\n-        ctxProviderRef.current.removeEventListener('file-upload-success', handleUpload)\r\n-      }\r\n-    }\r\n+    // return () => {\r\n+    //   if (ctxProviderRef.current) {\r\n+    //     ctxProviderRef.current.removeEventListener('file-upload-success', handleUpload)\r\n+    //   }\r\n+    // }\r\n   }, [onUpload, router])\r\n \r\n   return (\r\n     <div>\r\n-      <lr-config\r\n-        ctx-name=\"my-uploader\"\r\n-        pubkey=\"8e4ec24ec56c283ba3a2\"\r\n-      />\r\n-\r\n+      <lr-config ctx-name=\"my-uploader\" pubkey=\"8e4ec24ec56c283ba3a2\" />\r\n       <lr-file-uploader-regular\r\n         ctx-name=\"my-uploader\"\r\n         css-src={`https://cdn.jsdelivr.net/npm/@uploadcare/blocks@0.35.2/web/lr-file-uploader-regular.min.css`}\r\n       />\r\n-\r\n       <lr-upload-ctx-provider\r\n         ctx-name=\"my-uploader\"\r\n         ref={ctxProviderRef}\r\n       />\r\n"
                },
                {
                    "date": 1720860738845,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import * as LR from '@uploadcare/blocks'\r\n import { useRouter } from 'next/navigation'\r\n \r\n type Props = {\r\n-  onUpload?: any\r\n+  onUpload: (e: string) => any\r\n }\r\n \r\n LR.registerBlocks(LR)\r\n \r\n@@ -26,22 +26,27 @@\n     if (ctxProviderRef.current) {\r\n       ctxProviderRef.current.addEventListener('file-upload-success', handleUpload)\r\n     }\r\n \r\n-    // return () => {\r\n-    //   if (ctxProviderRef.current) {\r\n-    //     ctxProviderRef.current.removeEventListener('file-upload-success', handleUpload)\r\n-    //   }\r\n-    // }\r\n+    return () => {\r\n+      if (ctxProviderRef.current) {\r\n+        ctxProviderRef.current.removeEventListener('file-upload-success', handleUpload)\r\n+      }\r\n+    }\r\n   }, [onUpload, router])\r\n \r\n   return (\r\n     <div>\r\n-      <lr-config ctx-name=\"my-uploader\" pubkey=\"8e4ec24ec56c283ba3a2\" />\r\n+      <lr-config\r\n+        ctx-name=\"my-uploader\"\r\n+        pubkey=\"8e4ec24ec56c283ba3a2\"\r\n+      />\r\n+\r\n       <lr-file-uploader-regular\r\n         ctx-name=\"my-uploader\"\r\n         css-src={`https://cdn.jsdelivr.net/npm/@uploadcare/blocks@0.35.2/web/lr-file-uploader-regular.min.css`}\r\n       />\r\n+\r\n       <lr-upload-ctx-provider\r\n         ctx-name=\"my-uploader\"\r\n         ref={ctxProviderRef}\r\n       />\r\n"
                },
                {
                    "date": 1723970273390,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,14 +3,14 @@\n import * as LR from '@uploadcare/blocks'\r\n import { useRouter } from 'next/navigation'\r\n \r\n type Props = {\r\n-  onUpload: (e: string) => any\r\n+  onUpload?:any\r\n }\r\n \r\n LR.registerBlocks(LR)\r\n \r\n-const UploadCareButton = ({ onUpload }: Props) => {\r\n+const UploadCareButton = ({onUpload}: Props) => {\r\n   const router = useRouter()\r\n   const ctxProviderRef = useRef<\r\n     typeof LR.UploadCtxProvider.prototype & LR.UploadCtxProvider\r\n   >(null)\r\n"
                },
                {
                    "date": 1725197550727,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,10 +2,14 @@\n import React, { useEffect, useRef } from 'react'\r\n import * as LR from '@uploadcare/blocks'\r\n import { useRouter } from 'next/navigation'\r\n \r\n+// type Props = {\r\n+//   onUpload?:any\r\n+// }\r\n+\r\n type Props = {\r\n-  onUpload?:any\r\n+  onUpload: (e: string) => any\r\n }\r\n \r\n LR.registerBlocks(LR)\r\n \r\n"
                }
            ],
            "date": 1717927325479,
            "name": "Commit-0",
            "content": "'use client'\r\nimport React, { useEffect, useRef } from 'react'\r\nimport * as LR from '@uploadcare/blocks'\r\nimport { useRouter } from 'next/navigation'\r\n\r\ntype Props = {\r\n  onUpload?: any\r\n}\r\n\r\nLR.registerBlocks(LR)\r\n\r\nconst UploadCareButton = ({ onUpload }: Props) => {\r\n  const router = useRouter()\r\n  const ctxProviderRef = useRef<\r\n    typeof LR.UploadCtxProvider.prototype & LR.UploadCtxProvider\r\n  >(null)\r\n\r\n  useEffect(() => {\r\n    const handleUpload = async (e: any) => {\r\n      const file = await onUpload(e.detail.cdnUrl)\r\n      if (file) {\r\n        router.refresh()\r\n      }\r\n    }\r\n\r\n    if (ctxProviderRef.current) {\r\n      ctxProviderRef.current.addEventListener('file-upload-success', handleUpload)\r\n    }\r\n\r\n    return () => {\r\n      if (ctxProviderRef.current) {\r\n        ctxProviderRef.current.removeEventListener('file-upload-success', handleUpload)\r\n      }\r\n    }\r\n  }, [onUpload, router])\r\n\r\n  return (\r\n    <div>\r\n      <lr-config\r\n        ctx-name=\"my-uploader\"\r\n        pubkey=\"8e4ec24ec56c283ba3a2\"\r\n      />\r\n\r\n      <lr-file-uploader-regular\r\n        ctx-name=\"my-uploader\"\r\n        css-src={`https://cdn.jsdelivr.net/npm/@uploadcare/blocks@0.35.2/web/lr-file-uploader-regular.min.css`}\r\n      />\r\n\r\n      <lr-upload-ctx-provider\r\n        ctx-name=\"my-uploader\"\r\n        ref={ctxProviderRef}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UploadCareButton\r\n"
        }
    ]
}