{
    "sourceFile": "src/app/(main)/(pages)/settings/page.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 32,
            "patches": [
                {
                    "date": 1716727714027,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1720864030380,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,24 +1,59 @@\n-import Profileform from '@/components/forms/profile-form';\r\n-import React from 'react';\r\n-// import ProfilePicture from './_components/profile-picture';\r\n-// import { db } from '@/lib/db'\r\n+import ProfileForm from '@/components/forms/profile-form'\r\n+import React from 'react'\r\n+import ProfilePicture from './_component/profile-picture'\r\n+import { db } from '@/lib/db'\r\n+import { currentUser } from '@clerk/nextjs/server'\r\n \r\n-type Props = {};\r\n+type Props = {}\r\n \r\n-const Settings = (props: Props) => {\r\n-  // const removeProfileImage = async () => {\r\n-  //   'use server'\r\n-  //   const response = await db.user.update({\r\n-  //     where: {\r\n-  //       clerkId: authUser.id,\r\n-  //     },\r\n-  //     data: {\r\n-  //       profileImage: '',\r\n-  //     },\r\n-  //   })\r\n-  //   return response\r\n-  // }\r\n+const Settings = async (props: Props) => {\r\n+  const authUser = await currentUser()\r\n+  if (!authUser) return null\r\n+\r\n+  const user = await db.user.findUnique({ where: { clerkId: authUser.id } })\r\n+  const removeProfileImage = async () => {\r\n+    'use server'\r\n+    const response = await db.user.update({\r\n+      where: {\r\n+        clerkId: authUser.id,\r\n+      },\r\n+      data: {\r\n+        profileImage: '',\r\n+      },\r\n+    })\r\n+    return response\r\n+  }\r\n+\r\n+  const uploadProfileImage = async (image: string) => {\r\n+    'use server'\r\n+    const id = authUser.id\r\n+    const response = await db.user.update({\r\n+      where: {\r\n+        clerkId: id,\r\n+      },\r\n+      data: {\r\n+        profileImage: image,\r\n+      },\r\n+    })\r\n+\r\n+    return response\r\n+  }\r\n+\r\n+  const updateUserInfo = async (name: string) => {\r\n+    'use server'\r\n+\r\n+    const updateUser = await db.user.update({\r\n+      where: {\r\n+        clerkId: authUser.id,\r\n+      },\r\n+      data: {\r\n+        name,\r\n+      },\r\n+    })\r\n+    return updateUser\r\n+  }\r\n+\r\n   return (\r\n     <div className=\"flex flex-col gap-4\">\r\n       <h1 className=\"sticky top-0 z-[10] flex items-center justify-between border-b bg-background/50 p-6 text-4xl backdrop-blur-lg\">\r\n         <span>Settings</span>\r\n@@ -29,16 +64,19 @@\n           <p className=\"text-base text-white/50\">\r\n             Add or update your information\r\n           </p>\r\n         </div>\r\n-        {/* <ProfilePicture\r\n-                  onDelete={removeProfileImage}\r\n-                  userImage={user?.profileImage || ''}\r\n-                  onUpload={uploadProfileImage}/> */}\r\n-      \r\n-          <Profileform/>\r\n+        <ProfilePicture\r\n+          onDelete={removeProfileImage}\r\n+          userImage={user?.profileImage || ''}\r\n+          onUpload={uploadProfileImage}\r\n+        />\r\n+        <ProfileForm\r\n+          // user={user}\r\n+          // onUpdate={updateUserInfo}\r\n+        />\r\n       </div>\r\n     </div>\r\n-  );\r\n-};\r\n+  )\r\n+}\r\n \r\n-export default Settings;\r\n+export default Settings\n\\ No newline at end of file\n"
                },
                {
                    "date": 1720873426978,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,58 +1,58 @@\n import ProfileForm from '@/components/forms/profile-form'\r\n import React from 'react'\r\n import ProfilePicture from './_component/profile-picture'\r\n-import { db } from '@/lib/db'\r\n-import { currentUser } from '@clerk/nextjs/server'\r\n+// import { db } from '@/lib/db'\r\n+// import { currentUser } from '@clerk/nextjs/server'\r\n \r\n type Props = {}\r\n \r\n const Settings = async (props: Props) => {\r\n-  const authUser = await currentUser()\r\n-  if (!authUser) return null\r\n+  // const authUser = await currentUser()\r\n+  // if (!authUser) return null\r\n \r\n-  const user = await db.user.findUnique({ where: { clerkId: authUser.id } })\r\n-  const removeProfileImage = async () => {\r\n-    'use server'\r\n-    const response = await db.user.update({\r\n-      where: {\r\n-        clerkId: authUser.id,\r\n-      },\r\n-      data: {\r\n-        profileImage: '',\r\n-      },\r\n-    })\r\n-    return response\r\n-  }\r\n+  // const user = await db.user.findUnique({ where: { clerkId: authUser.id } })\r\n+  // const removeProfileImage = async () => {\r\n+  //   'use server'\r\n+  //   const response = await db.user.update({\r\n+  //     where: {\r\n+  //       clerkId: authUser.id,\r\n+  //     },\r\n+  //     data: {\r\n+  //       profileImage: '',\r\n+  //     },\r\n+  //   })\r\n+  //   return response\r\n+  // }\r\n \r\n-  const uploadProfileImage = async (image: string) => {\r\n-    'use server'\r\n-    const id = authUser.id\r\n-    const response = await db.user.update({\r\n-      where: {\r\n-        clerkId: id,\r\n-      },\r\n-      data: {\r\n-        profileImage: image,\r\n-      },\r\n-    })\r\n+  // const uploadProfileImage = async (image: string) => {\r\n+  //   'use server'\r\n+  //   const id = authUser.id\r\n+  //   const response = await db.user.update({\r\n+  //     where: {\r\n+  //       clerkId: id,\r\n+  //     },\r\n+  //     data: {\r\n+  //       profileImage: image,\r\n+  //     },\r\n+  //   })\r\n \r\n-    return response\r\n-  }\r\n+  //   return response\r\n+  // }\r\n \r\n-  const updateUserInfo = async (name: string) => {\r\n-    'use server'\r\n+  // const updateUserInfo = async (name: string) => {\r\n+  //   'use server'\r\n \r\n-    const updateUser = await db.user.update({\r\n-      where: {\r\n-        clerkId: authUser.id,\r\n-      },\r\n-      data: {\r\n-        name,\r\n-      },\r\n-    })\r\n-    return updateUser\r\n-  }\r\n+  //   const updateUser = await db.user.update({\r\n+  //     where: {\r\n+  //       clerkId: authUser.id,\r\n+  //     },\r\n+  //     data: {\r\n+  //       name,\r\n+  //     },\r\n+  //   })\r\n+  //   return updateUser\r\n+  // }\r\n \r\n   return (\r\n     <div className=\"flex flex-col gap-4\">\r\n       <h1 className=\"sticky top-0 z-[10] flex items-center justify-between border-b bg-background/50 p-6 text-4xl backdrop-blur-lg\">\r\n@@ -64,13 +64,13 @@\n           <p className=\"text-base text-white/50\">\r\n             Add or update your information\r\n           </p>\r\n         </div>\r\n-        <ProfilePicture\r\n+        {/* <ProfilePicture\r\n           onDelete={removeProfileImage}\r\n           userImage={user?.profileImage || ''}\r\n           onUpload={uploadProfileImage}\r\n-        />\r\n+        /> */}\r\n         <ProfileForm\r\n           // user={user}\r\n           // onUpdate={updateUserInfo}\r\n         />\r\n"
                },
                {
                    "date": 1721016089278,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,58 +1,58 @@\n import ProfileForm from '@/components/forms/profile-form'\r\n import React from 'react'\r\n import ProfilePicture from './_component/profile-picture'\r\n-// import { db } from '@/lib/db'\r\n-// import { currentUser } from '@clerk/nextjs/server'\r\n+import { db } from '@/lib/db'\r\n+import { currentUser } from '@clerk/nextjs/server'\r\n \r\n type Props = {}\r\n \r\n const Settings = async (props: Props) => {\r\n-  // const authUser = await currentUser()\r\n-  // if (!authUser) return null\r\n+  const authUser = await currentUser()\r\n+  if (!authUser) return null\r\n \r\n-  // const user = await db.user.findUnique({ where: { clerkId: authUser.id } })\r\n-  // const removeProfileImage = async () => {\r\n-  //   'use server'\r\n-  //   const response = await db.user.update({\r\n-  //     where: {\r\n-  //       clerkId: authUser.id,\r\n-  //     },\r\n-  //     data: {\r\n-  //       profileImage: '',\r\n-  //     },\r\n-  //   })\r\n-  //   return response\r\n-  // }\r\n+  const user = await db.user.findUnique({ where: { clerkId: authUser.id } })\r\n+  const removeProfileImage = async () => {\r\n+    'use server'\r\n+    const response = await db.user.update({\r\n+      where: {\r\n+        clerkId: authUser.id,\r\n+      },\r\n+      data: {\r\n+        profileImage: '',\r\n+      },\r\n+    })\r\n+    return response\r\n+  }\r\n \r\n-  // const uploadProfileImage = async (image: string) => {\r\n-  //   'use server'\r\n-  //   const id = authUser.id\r\n-  //   const response = await db.user.update({\r\n-  //     where: {\r\n-  //       clerkId: id,\r\n-  //     },\r\n-  //     data: {\r\n-  //       profileImage: image,\r\n-  //     },\r\n-  //   })\r\n+  const uploadProfileImage = async (image: string) => {\r\n+    'use server'\r\n+    const id = authUser.id\r\n+    const response = await db.user.update({\r\n+      where: {\r\n+        clerkId: id,\r\n+      },\r\n+      data: {\r\n+        profileImage: image,\r\n+      },\r\n+    })\r\n \r\n-  //   return response\r\n-  // }\r\n+    return response\r\n+  }\r\n \r\n-  // const updateUserInfo = async (name: string) => {\r\n-  //   'use server'\r\n+  const updateUserInfo = async (name: string) => {\r\n+    'use server'\r\n \r\n-  //   const updateUser = await db.user.update({\r\n-  //     where: {\r\n-  //       clerkId: authUser.id,\r\n-  //     },\r\n-  //     data: {\r\n-  //       name,\r\n-  //     },\r\n-  //   })\r\n-  //   return updateUser\r\n-  // }\r\n+    const updateUser = await db.user.update({\r\n+      where: {\r\n+        clerkId: authUser.id,\r\n+      },\r\n+      data: {\r\n+        name,\r\n+      },\r\n+    })\r\n+    return updateUser\r\n+  }\r\n \r\n   return (\r\n     <div className=\"flex flex-col gap-4\">\r\n       <h1 className=\"sticky top-0 z-[10] flex items-center justify-between border-b bg-background/50 p-6 text-4xl backdrop-blur-lg\">\r\n@@ -64,13 +64,13 @@\n           <p className=\"text-base text-white/50\">\r\n             Add or update your information\r\n           </p>\r\n         </div>\r\n-        {/* <ProfilePicture\r\n+        <ProfilePicture\r\n           onDelete={removeProfileImage}\r\n           userImage={user?.profileImage || ''}\r\n           onUpload={uploadProfileImage}\r\n-        /> */}\r\n+        />\r\n         <ProfileForm\r\n           // user={user}\r\n           // onUpdate={updateUserInfo}\r\n         />\r\n"
                },
                {
                    "date": 1721016153985,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,53 +6,53 @@\n \r\n type Props = {}\r\n \r\n const Settings = async (props: Props) => {\r\n-  const authUser = await currentUser()\r\n-  if (!authUser) return null\r\n+  // const authUser = await currentUser()\r\n+  // if (!authUser) return null\r\n \r\n-  const user = await db.user.findUnique({ where: { clerkId: authUser.id } })\r\n-  const removeProfileImage = async () => {\r\n-    'use server'\r\n-    const response = await db.user.update({\r\n-      where: {\r\n-        clerkId: authUser.id,\r\n-      },\r\n-      data: {\r\n-        profileImage: '',\r\n-      },\r\n-    })\r\n-    return response\r\n-  }\r\n+  // const user = await db.user.findUnique({ where: { clerkId: authUser.id } })\r\n+  // const removeProfileImage = async () => {\r\n+  //   'use server'\r\n+  //   const response = await db.user.update({\r\n+  //     where: {\r\n+  //       clerkId: authUser.id,\r\n+  //     },\r\n+  //     data: {\r\n+  //       profileImage: '',\r\n+  //     },\r\n+  //   })\r\n+  //   return response\r\n+  // }\r\n \r\n-  const uploadProfileImage = async (image: string) => {\r\n-    'use server'\r\n-    const id = authUser.id\r\n-    const response = await db.user.update({\r\n-      where: {\r\n-        clerkId: id,\r\n-      },\r\n-      data: {\r\n-        profileImage: image,\r\n-      },\r\n-    })\r\n+  // const uploadProfileImage = async (image: string) => {\r\n+  //   'use server'\r\n+  //   const id = authUser.id\r\n+  //   const response = await db.user.update({\r\n+  //     where: {\r\n+  //       clerkId: id,\r\n+  //     },\r\n+  //     data: {\r\n+  //       profileImage: image,\r\n+  //     },\r\n+  //   })\r\n \r\n-    return response\r\n-  }\r\n+  //   return response\r\n+  // }\r\n \r\n-  const updateUserInfo = async (name: string) => {\r\n-    'use server'\r\n+  // const updateUserInfo = async (name: string) => {\r\n+  //   'use server'\r\n \r\n-    const updateUser = await db.user.update({\r\n-      where: {\r\n-        clerkId: authUser.id,\r\n-      },\r\n-      data: {\r\n-        name,\r\n-      },\r\n-    })\r\n-    return updateUser\r\n-  }\r\n+  //   const updateUser = await db.user.update({\r\n+  //     where: {\r\n+  //       clerkId: authUser.id,\r\n+  //     },\r\n+  //     data: {\r\n+  //       name,\r\n+  //     },\r\n+  //   })\r\n+  //   return updateUser\r\n+  // }\r\n \r\n   return (\r\n     <div className=\"flex flex-col gap-4\">\r\n       <h1 className=\"sticky top-0 z-[10] flex items-center justify-between border-b bg-background/50 p-6 text-4xl backdrop-blur-lg\">\r\n@@ -64,13 +64,13 @@\n           <p className=\"text-base text-white/50\">\r\n             Add or update your information\r\n           </p>\r\n         </div>\r\n-        <ProfilePicture\r\n+        {/* <ProfilePicture\r\n           onDelete={removeProfileImage}\r\n           userImage={user?.profileImage || ''}\r\n           onUpload={uploadProfileImage}\r\n-        />\r\n+        /> */}\r\n         <ProfileForm\r\n           // user={user}\r\n           // onUpdate={updateUserInfo}\r\n         />\r\n"
                },
                {
                    "date": 1721043728781,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,53 +6,53 @@\n \r\n type Props = {}\r\n \r\n const Settings = async (props: Props) => {\r\n-  // const authUser = await currentUser()\r\n-  // if (!authUser) return null\r\n+  const authUser = await currentUser()\r\n+  if (!authUser) return null\r\n \r\n-  // const user = await db.user.findUnique({ where: { clerkId: authUser.id } })\r\n-  // const removeProfileImage = async () => {\r\n-  //   'use server'\r\n-  //   const response = await db.user.update({\r\n-  //     where: {\r\n-  //       clerkId: authUser.id,\r\n-  //     },\r\n-  //     data: {\r\n-  //       profileImage: '',\r\n-  //     },\r\n-  //   })\r\n-  //   return response\r\n-  // }\r\n+  const user = await db.user.findUnique({ where: { clerkId: authUser.id } })\r\n+  const removeProfileImage = async () => {\r\n+    'use server'\r\n+    const response = await db.user.update({\r\n+      where: {\r\n+        clerkId: authUser.id,\r\n+      },\r\n+      data: {\r\n+        profileImage: '',\r\n+      },\r\n+    })\r\n+    return response\r\n+  }\r\n \r\n-  // const uploadProfileImage = async (image: string) => {\r\n-  //   'use server'\r\n-  //   const id = authUser.id\r\n-  //   const response = await db.user.update({\r\n-  //     where: {\r\n-  //       clerkId: id,\r\n-  //     },\r\n-  //     data: {\r\n-  //       profileImage: image,\r\n-  //     },\r\n-  //   })\r\n+  const uploadProfileImage = async (image: string) => {\r\n+    'use server'\r\n+    const id = authUser.id\r\n+    const response = await db.user.update({\r\n+      where: {\r\n+        clerkId: id,\r\n+      },\r\n+      data: {\r\n+        profileImage: image,\r\n+      },\r\n+    })\r\n \r\n-  //   return response\r\n-  // }\r\n+    return response\r\n+  }\r\n \r\n-  // const updateUserInfo = async (name: string) => {\r\n-  //   'use server'\r\n+  const updateUserInfo = async (name: string) => {\r\n+    'use server'\r\n \r\n-  //   const updateUser = await db.user.update({\r\n-  //     where: {\r\n-  //       clerkId: authUser.id,\r\n-  //     },\r\n-  //     data: {\r\n-  //       name,\r\n-  //     },\r\n-  //   })\r\n-  //   return updateUser\r\n-  // }\r\n+    const updateUser = await db.user.update({\r\n+      where: {\r\n+        clerkId: authUser.id,\r\n+      },\r\n+      data: {\r\n+        name,\r\n+      },\r\n+    })\r\n+    return updateUser\r\n+  }\r\n \r\n   return (\r\n     <div className=\"flex flex-col gap-4\">\r\n       <h1 className=\"sticky top-0 z-[10] flex items-center justify-between border-b bg-background/50 p-6 text-4xl backdrop-blur-lg\">\r\n@@ -64,13 +64,13 @@\n           <p className=\"text-base text-white/50\">\r\n             Add or update your information\r\n           </p>\r\n         </div>\r\n-        {/* <ProfilePicture\r\n+        <ProfilePicture\r\n           onDelete={removeProfileImage}\r\n           userImage={user?.profileImage || ''}\r\n           onUpload={uploadProfileImage}\r\n-        /> */}\r\n+        />\r\n         <ProfileForm\r\n           // user={user}\r\n           // onUpdate={updateUserInfo}\r\n         />\r\n"
                },
                {
                    "date": 1721043908074,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,53 +6,53 @@\n \r\n type Props = {}\r\n \r\n const Settings = async (props: Props) => {\r\n-  const authUser = await currentUser()\r\n-  if (!authUser) return null\r\n+  // const authUser = await currentUser()\r\n+  // if (!authUser) return null\r\n \r\n-  const user = await db.user.findUnique({ where: { clerkId: authUser.id } })\r\n-  const removeProfileImage = async () => {\r\n-    'use server'\r\n-    const response = await db.user.update({\r\n-      where: {\r\n-        clerkId: authUser.id,\r\n-      },\r\n-      data: {\r\n-        profileImage: '',\r\n-      },\r\n-    })\r\n-    return response\r\n-  }\r\n+  // const user = await db.user.findUnique({ where: { clerkId: authUser.id } })\r\n+  // const removeProfileImage = async () => {\r\n+  //   'use server'\r\n+  //   const response = await db.user.update({\r\n+  //     where: {\r\n+  //       clerkId: authUser.id,\r\n+  //     },\r\n+  //     data: {\r\n+  //       profileImage: '',\r\n+  //     },\r\n+  //   })\r\n+  //   return response\r\n+  // }\r\n \r\n-  const uploadProfileImage = async (image: string) => {\r\n-    'use server'\r\n-    const id = authUser.id\r\n-    const response = await db.user.update({\r\n-      where: {\r\n-        clerkId: id,\r\n-      },\r\n-      data: {\r\n-        profileImage: image,\r\n-      },\r\n-    })\r\n+  // const uploadProfileImage = async (image: string) => {\r\n+  //   'use server'\r\n+  //   const id = authUser.id\r\n+  //   const response = await db.user.update({\r\n+  //     where: {\r\n+  //       clerkId: id,\r\n+  //     },\r\n+  //     data: {\r\n+  //       profileImage: image,\r\n+  //     },\r\n+  //   })\r\n \r\n-    return response\r\n-  }\r\n+  //   return response\r\n+  // }\r\n \r\n-  const updateUserInfo = async (name: string) => {\r\n-    'use server'\r\n+  // const updateUserInfo = async (name: string) => {\r\n+  //   'use server'\r\n \r\n-    const updateUser = await db.user.update({\r\n-      where: {\r\n-        clerkId: authUser.id,\r\n-      },\r\n-      data: {\r\n-        name,\r\n-      },\r\n-    })\r\n-    return updateUser\r\n-  }\r\n+  //   const updateUser = await db.user.update({\r\n+  //     where: {\r\n+  //       clerkId: authUser.id,\r\n+  //     },\r\n+  //     data: {\r\n+  //       name,\r\n+  //     },\r\n+  //   })\r\n+  //   return updateUser\r\n+  // }\r\n \r\n   return (\r\n     <div className=\"flex flex-col gap-4\">\r\n       <h1 className=\"sticky top-0 z-[10] flex items-center justify-between border-b bg-background/50 p-6 text-4xl backdrop-blur-lg\">\r\n@@ -64,13 +64,13 @@\n           <p className=\"text-base text-white/50\">\r\n             Add or update your information\r\n           </p>\r\n         </div>\r\n-        <ProfilePicture\r\n+        {/* <ProfilePicture\r\n           onDelete={removeProfileImage}\r\n           userImage={user?.profileImage || ''}\r\n           onUpload={uploadProfileImage}\r\n-        />\r\n+        /> */}\r\n         <ProfileForm\r\n           // user={user}\r\n           // onUpdate={updateUserInfo}\r\n         />\r\n"
                },
                {
                    "date": 1721550637896,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,39 +6,39 @@\n \r\n type Props = {}\r\n \r\n const Settings = async (props: Props) => {\r\n-  // const authUser = await currentUser()\r\n-  // if (!authUser) return null\r\n+  const authUser = await currentUser()\r\n+  if (!authUser) return null\r\n \r\n-  // const user = await db.user.findUnique({ where: { clerkId: authUser.id } })\r\n-  // const removeProfileImage = async () => {\r\n-  //   'use server'\r\n-  //   const response = await db.user.update({\r\n-  //     where: {\r\n-  //       clerkId: authUser.id,\r\n-  //     },\r\n-  //     data: {\r\n-  //       profileImage: '',\r\n-  //     },\r\n-  //   })\r\n-  //   return response\r\n-  // }\r\n+  const user = await db.user.findUnique({ where: { clerkId: authUser.id } })\r\n+  const removeProfileImage = async () => {\r\n+    'use server'\r\n+    const response = await db.user.update({\r\n+      where: {\r\n+        clerkId: authUser.id,\r\n+      },\r\n+      data: {\r\n+        profileImage: '',\r\n+      },\r\n+    })\r\n+    return response\r\n+  }\r\n \r\n-  // const uploadProfileImage = async (image: string) => {\r\n-  //   'use server'\r\n-  //   const id = authUser.id\r\n-  //   const response = await db.user.update({\r\n-  //     where: {\r\n-  //       clerkId: id,\r\n-  //     },\r\n-  //     data: {\r\n-  //       profileImage: image,\r\n-  //     },\r\n-  //   })\r\n+  const uploadProfileImage = async (image: string) => {\r\n+    'use server'\r\n+    const id = authUser.id\r\n+    const response = await db.user.update({\r\n+      where: {\r\n+        clerkId: id,\r\n+      },\r\n+      data: {\r\n+        profileImage: image,\r\n+      },\r\n+    })\r\n \r\n-  //   return response\r\n-  // }\r\n+    return response\r\n+  }\r\n \r\n   // const updateUserInfo = async (name: string) => {\r\n   //   'use server'\r\n \r\n@@ -64,13 +64,13 @@\n           <p className=\"text-base text-white/50\">\r\n             Add or update your information\r\n           </p>\r\n         </div>\r\n-        {/* <ProfilePicture\r\n+        <ProfilePicture\r\n           onDelete={removeProfileImage}\r\n           userImage={user?.profileImage || ''}\r\n           onUpload={uploadProfileImage}\r\n-        /> */}\r\n+        />\r\n         <ProfileForm\r\n           // user={user}\r\n           // onUpdate={updateUserInfo}\r\n         />\r\n"
                },
                {
                    "date": 1721551905989,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,82 +1,65 @@\n-import ProfileForm from '@/components/forms/profile-form'\r\n-import React from 'react'\r\n-import ProfilePicture from './_component/profile-picture'\r\n-import { db } from '@/lib/db'\r\n-import { currentUser } from '@clerk/nextjs/server'\r\n+import React, { useEffect, useState } from 'react';\r\n+import Link from 'next/link';\r\n+import Image from 'next/image';\r\n+import { MenuIcon } from 'lucide-react';\r\n+import { UserButton, useAuth } from '@clerk/nextjs';\r\n \r\n-type Props = {}\r\n+const Navbar = () => {\r\n+  const { userId } = useAuth();\r\n+  const [mounted, setMounted] = useState(false);\r\n \r\n-const Settings = async (props: Props) => {\r\n-  const authUser = await currentUser()\r\n-  if (!authUser) return null\r\n+  useEffect(() => {\r\n+    setMounted(true);\r\n+  }, []);\r\n \r\n-  const user = await db.user.findUnique({ where: { clerkId: authUser.id } })\r\n-  const removeProfileImage = async () => {\r\n-    'use server'\r\n-    const response = await db.user.update({\r\n-      where: {\r\n-        clerkId: authUser.id,\r\n-      },\r\n-      data: {\r\n-        profileImage: '',\r\n-      },\r\n-    })\r\n-    return response\r\n-  }\r\n-\r\n-  const uploadProfileImage = async (image: string) => {\r\n-    'use server'\r\n-    const id = authUser.id\r\n-    const response = await db.user.update({\r\n-      where: {\r\n-        clerkId: id,\r\n-      },\r\n-      data: {\r\n-        profileImage: image,\r\n-      },\r\n-    })\r\n-\r\n-    return response\r\n-  }\r\n-\r\n-  // const updateUserInfo = async (name: string) => {\r\n-  //   'use server'\r\n-\r\n-  //   const updateUser = await db.user.update({\r\n-  //     where: {\r\n-  //       clerkId: authUser.id,\r\n-  //     },\r\n-  //     data: {\r\n-  //       name,\r\n-  //     },\r\n-  //   })\r\n-  //   return updateUser\r\n-  // }\r\n-\r\n   return (\r\n-    <div className=\"flex flex-col gap-4\">\r\n-      <h1 className=\"sticky top-0 z-[10] flex items-center justify-between border-b bg-background/50 p-6 text-4xl backdrop-blur-lg\">\r\n-        <span>Settings</span>\r\n-      </h1>\r\n-      <div className=\"flex flex-col gap-10 p-6\">\r\n-        <div>\r\n-          <h2 className=\"text-2xl font-bold\">User Profile</h2>\r\n-          <p className=\"text-base text-white/50\">\r\n-            Add or update your information\r\n-          </p>\r\n-        </div>\r\n-        <ProfilePicture\r\n-          onDelete={removeProfileImage}\r\n-          userImage={user?.profileImage || ''}\r\n-          onUpload={uploadProfileImage}\r\n\\ No newline at end of file\n+    <header className=\"fixed right-0 left-0 top-0 py-4 px-4 bg-black/40 backdrop-blur-lg z-[100] flex items-center border-b-[1px] border-neutral-900 justify-between\">\r\n+      <aside className=\"flex items-center gap-[2px]\">\r\n+        <p className=\"text-3xl font-bold\">A</p>\r\n+        <Image\r\n+          src=\"/fuzzieLogo.png\"\r\n+          width={15}\r\n+          height={15}\r\n+          alt=\"DELL logo\"\r\n+          className=\"shadow-sm\"\r\n         />\r\n-        <ProfileForm\r\n-          // user={user}\r\n-          // onUpdate={updateUserInfo}\r\n-        />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n+        <p className=\"text-3xl font-bold\">PP</p>\r\n+      </aside>\r\n+      <nav className=\"absolute left-[50%] top-[50%] transform translate-x-[-50%] translate-y-[-50%] hidden md:block\">\r\n+        <ul className=\"flex items-center gap-4 list-none\">\r\n+          <li>\r\n+            <Link href=\"#\">Products</Link>\r\n+          </li>\r\n+          <li>\r\n+            <Link href=\"#\">Resources</Link>\r\n+          </li>\r\n+          <li>\r\n+            <Link href=\"#\">Documentation</Link>\r\n+          </li>\r\n+          <li>\r\n+            <Link href=\"#\">Playground</Link>\r\n+          </li>\r\n+        </ul>\r\n+      </nav>\r\n+      <aside className=\"flex items-center gap-4\">\r\n+        {mounted && (\r\n+          <>\r\n+            <Link\r\n+              href={userId ? '/dashboard' : '/sign-in'}\r\n+              className=\"relative inline-flex h-10 overflow-hidden rounded-full p-[2px] focus:outline-none focus:ring-2 focus:ring-slate-400 focus:ring-offset-2 focus:ring-offset-slate-50\"\r\n+            >\r\n+              <span className=\"absolute inset-[-1000%] animate-[spin_2s_linear_infinite] bg-[conic-gradient(from_90deg_at_50%_50%,#E2CBFF_0%,#393BB2_50%,#E2CBFF_100%)]\" />\r\n+              <span className=\"inline-flex h-full w-full cursor-pointer items-center justify-center rounded-full bg-slate-950 px-3 py-1 text-sm font-medium text-white backdrop-blur-3xl\">\r\n+                {userId ? 'Dashboard' : 'Get Started'}\r\n+              </span>\r\n+            </Link>\r\n+            <UserButton />\r\n+          </>\r\n+        )}\r\n+        <MenuIcon className=\"md:hidden\" />\r\n+      </aside>\r\n+    </header>\r\n+  );\r\n+};\r\n \r\n-export default Settings\n+export default Navbar;\r\n"
                },
                {
                    "date": 1721551958921,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,65 +1,82 @@\n-import React, { useEffect, useState } from 'react';\r\n-import Link from 'next/link';\r\n-import Image from 'next/image';\r\n-import { MenuIcon } from 'lucide-react';\r\n-import { UserButton, useAuth } from '@clerk/nextjs';\r\n+import ProfileForm from '@/components/forms/profile-form'\r\n+import React from 'react'\r\n+import ProfilePicture from './_component/profile-picture'\r\n+import { db } from '@/lib/db'\r\n+import { currentUser } from '@clerk/nextjs/server'\r\n \r\n-const Navbar = () => {\r\n-  const { userId } = useAuth();\r\n-  const [mounted, setMounted] = useState(false);\r\n+type Props = {}\r\n \r\n-  useEffect(() => {\r\n-    setMounted(true);\r\n-  }, []);\r\n+const Settings = async (props: Props) => {\r\n+  const authUser = await currentUser()\r\n+  if (!authUser) return null\r\n \r\n+  const user = await db.user.findUnique({ where: { clerkId: authUser.id } })\r\n+  const removeProfileImage = async () => {\r\n+    'use server'\r\n+    const response = await db.user.update({\r\n+      where: {\r\n+        clerkId: authUser.id,\r\n+      },\r\n+      data: {\r\n+        profileImage: '',\r\n+      },\r\n+    })\r\n+    return response\r\n+  }\r\n+\r\n+  const uploadProfileImage = async (image: string) => {\r\n+    'use server'\r\n+    const id = authUser.id\r\n+    const response = await db.user.update({\r\n+      where: {\r\n+        clerkId: id,\r\n+      },\r\n+      data: {\r\n+        profileImage: image,\r\n+      },\r\n+    })\r\n+\r\n+    return response\r\n+  }\r\n+\r\n+  // const updateUserInfo = async (name: string) => {\r\n+  //   'use server'\r\n+\r\n+  //   const updateUser = await db.user.update({\r\n+  //     where: {\r\n+  //       clerkId: authUser.id,\r\n+  //     },\r\n+  //     data: {\r\n+  //       name,\r\n+  //     },\r\n+  //   })\r\n+  //   return updateUser\r\n+  // }\r\n+\r\n   return (\r\n-    <header className=\"fixed right-0 left-0 top-0 py-4 px-4 bg-black/40 backdrop-blur-lg z-[100] flex items-center border-b-[1px] border-neutral-900 justify-between\">\r\n-      <aside className=\"flex items-center gap-[2px]\">\r\n-        <p className=\"text-3xl font-bold\">A</p>\r\n-        <Image\r\n-          src=\"/fuzzieLogo.png\"\r\n-          width={15}\r\n-          height={15}\r\n-          alt=\"DELL logo\"\r\n-          className=\"shadow-sm\"\r\n+    <div className=\"flex flex-col gap-4\">\r\n+      <h1 className=\"sticky top-0 z-[10] flex items-center justify-between border-b bg-background/50 p-6 text-4xl backdrop-blur-lg\">\r\n+        <span>Settings</span>\r\n+      </h1>\r\n+      <div className=\"flex flex-col gap-10 p-6\">\r\n+        <div>\r\n+          <h2 className=\"text-2xl font-bold\">User Profile</h2>\r\n+          <p className=\"text-base text-white/50\">\r\n+            Add or update your information\r\n+          </p>\r\n+        </div>\r\n+        <ProfilePicture\r\n+          onDelete={removeProfileImage}\r\n+          userImage={user?.profileImage || ''}\r\n+          onUpload={uploadProfileImage}\r\n         />\r\n-        <p className=\"text-3xl font-bold\">PP</p>\r\n-      </aside>\r\n-      <nav className=\"absolute left-[50%] top-[50%] transform translate-x-[-50%] translate-y-[-50%] hidden md:block\">\r\n-        <ul className=\"flex items-center gap-4 list-none\">\r\n-          <li>\r\n-            <Link href=\"#\">Products</Link>\r\n-          </li>\r\n-          <li>\r\n-            <Link href=\"#\">Resources</Link>\r\n-          </li>\r\n-          <li>\r\n-            <Link href=\"#\">Documentation</Link>\r\n-          </li>\r\n-          <li>\r\n-            <Link href=\"#\">Playground</Link>\r\n-          </li>\r\n-        </ul>\r\n-      </nav>\r\n-      <aside className=\"flex items-center gap-4\">\r\n-        {mounted && (\r\n-          <>\r\n-            <Link\r\n-              href={userId ? '/dashboard' : '/sign-in'}\r\n-              className=\"relative inline-flex h-10 overflow-hidden rounded-full p-[2px] focus:outline-none focus:ring-2 focus:ring-slate-400 focus:ring-offset-2 focus:ring-offset-slate-50\"\r\n-            >\r\n-              <span className=\"absolute inset-[-1000%] animate-[spin_2s_linear_infinite] bg-[conic-gradient(from_90deg_at_50%_50%,#E2CBFF_0%,#393BB2_50%,#E2CBFF_100%)]\" />\r\n-              <span className=\"inline-flex h-full w-full cursor-pointer items-center justify-center rounded-full bg-slate-950 px-3 py-1 text-sm font-medium text-white backdrop-blur-3xl\">\r\n-                {userId ? 'Dashboard' : 'Get Started'}\r\n-              </span>\r\n-            </Link>\r\n-            <UserButton />\r\n-          </>\r\n-        )}\r\n-        <MenuIcon className=\"md:hidden\" />\r\n-      </aside>\r\n-    </header>\r\n-  );\r\n-};\r\n+        <ProfileForm\r\n+          // user={user}\r\n+          // onUpdate={updateUserInfo}\r\n+        />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n \r\n-export default Navbar;\r\n+export default Settings\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722050387205,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,21 +38,21 @@\n \r\n     return response\r\n   }\r\n \r\n-  // const updateUserInfo = async (name: string) => {\r\n-  //   'use server'\r\n+  const updateUserInfo = async (name: string) => {\r\n+    'use server'\r\n \r\n-  //   const updateUser = await db.user.update({\r\n-  //     where: {\r\n-  //       clerkId: authUser.id,\r\n-  //     },\r\n-  //     data: {\r\n-  //       name,\r\n-  //     },\r\n-  //   })\r\n-  //   return updateUser\r\n-  // }\r\n+    const updateUser = await db.user.update({\r\n+      where: {\r\n+        clerkId: authUser.id,\r\n+      },\r\n+      data: {\r\n+        name,\r\n+      },\r\n+    })\r\n+    return updateUser\r\n+  }\r\n \r\n   return (\r\n     <div className=\"flex flex-col gap-4\">\r\n       <h1 className=\"sticky top-0 z-[10] flex items-center justify-between border-b bg-background/50 p-6 text-4xl backdrop-blur-lg\">\r\n@@ -70,10 +70,10 @@\n           userImage={user?.profileImage || ''}\r\n           onUpload={uploadProfileImage}\r\n         />\r\n         <ProfileForm\r\n-          // user={user}\r\n-          // onUpdate={updateUserInfo}\r\n+          user={user}\r\n+          onUpdate={updateUserInfo}\r\n         />\r\n       </div>\r\n     </div>\r\n   )\r\n"
                },
                {
                    "date": 1722050972346,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,8 +10,11 @@\n   const authUser = await currentUser()\r\n   if (!authUser) return null\r\n \r\n   const user = await db.user.findUnique({ where: { clerkId: authUser.id } })\r\n+  \r\n+  console.log('Fetched user:', user) // Add this line to log the user object\r\n+\r\n   const removeProfileImage = async () => {\r\n     'use server'\r\n     const response = await db.user.update({\r\n       where: {\r\n@@ -69,14 +72,16 @@\n           onDelete={removeProfileImage}\r\n           userImage={user?.profileImage || ''}\r\n           onUpload={uploadProfileImage}\r\n         />\r\n-        <ProfileForm\r\n-          user={user}\r\n-          onUpdate={updateUserInfo}\r\n-        />\r\n+        {user && (\r\n+          <ProfileForm\r\n+            user={user}\r\n+            onUpdate={updateUserInfo}\r\n+          />\r\n+        )}\r\n\\ No newline at end of file\n       </div>\r\n     </div>\r\n   )\r\n }\r\n \r\n-export default Settings\n+export default Settings\r\n"
                },
                {
                    "date": 1722300084584,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import ProfileForm from '@/components/forms/profile-form'\r\n import React from 'react'\r\n-import ProfilePicture from './_component/profile-picture'\r\n+import ProfilePicture from './_components/profile-picture'\r\n import { db } from '@/lib/db'\r\n import { currentUser } from '@clerk/nextjs/server'\r\n \r\n type Props = {}\r\n@@ -83,5 +83,5 @@\n     </div>\r\n   )\r\n }\r\n \r\n-export default Settings\n\\ No newline at end of file\n+export default Settings\r\n"
                },
                {
                    "date": 1722300111424,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import ProfileForm from '@/components/forms/profile-form'\r\n import React from 'react'\r\n-import ProfilePicture from './_components/profile-picture'\r\n+import ProfilePicture from './_component/profile-picture'\r\n import { db } from '@/lib/db'\r\n import { currentUser } from '@clerk/nextjs/server'\r\n \r\n type Props = {}\r\n"
                },
                {
                    "date": 1722341435401,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,73 +1,58 @@\n-import ProfileForm from '@/components/forms/profile-form'\r\n-import React from 'react'\r\n-import ProfilePicture from './_component/profile-picture'\r\n-import { db } from '@/lib/db'\r\n-import { currentUser } from '@clerk/nextjs/server'\r\n+import ProfileForm from '@/components/forms/profile-form';\r\n+import React from 'react';\r\n+import ProfilePicture from './_component/profile-picture';\r\n+import { db } from '@/lib/db';\r\n+import { currentUser } from '@clerk/nextjs/server';\r\n \r\n-type Props = {}\r\n+type Props = {};\r\n \r\n const Settings = async (props: Props) => {\r\n-  const authUser = await currentUser()\r\n-  if (!authUser) return null\r\n+  // Fetch authenticated user\r\n+  const authUser = await currentUser();\r\n+  if (!authUser) return null;\r\n \r\n-  const user = await db.user.findUnique({ where: { clerkId: authUser.id } })\r\n-  \r\n-  console.log('Fetched user:', user) // Add this line to log the user object\r\n+  // Fetch user data from the database\r\n+  const user = await db.user.findUnique({ where: { clerkId: authUser.id } });\r\n \r\n+  // Log the fetched user data for debugging\r\n+  console.log('Fetched user:', user);\r\n+\r\n+  // Define server-side functions for updating user data\r\n   const removeProfileImage = async () => {\r\n-    'use server'\r\n-    const response = await db.user.update({\r\n-      where: {\r\n-        clerkId: authUser.id,\r\n-      },\r\n-      data: {\r\n-        profileImage: '',\r\n-      },\r\n-    })\r\n-    return response\r\n-  }\r\n+    'use server';\r\n+    return db.user.update({\r\n+      where: { clerkId: authUser.id },\r\n+      data: { profileImage: '' },\r\n+    });\r\n+  };\r\n \r\n   const uploadProfileImage = async (image: string) => {\r\n-    'use server'\r\n-    const id = authUser.id\r\n-    const response = await db.user.update({\r\n-      where: {\r\n-        clerkId: id,\r\n-      },\r\n-      data: {\r\n-        profileImage: image,\r\n-      },\r\n-    })\r\n+    'use server';\r\n+    return db.user.update({\r\n+      where: { clerkId: authUser.id },\r\n+      data: { profileImage: image },\r\n+    });\r\n+  };\r\n \r\n-    return response\r\n-  }\r\n-\r\n   const updateUserInfo = async (name: string) => {\r\n-    'use server'\r\n+    'use server';\r\n+    return db.user.update({\r\n+      where: { clerkId: authUser.id },\r\n+      data: { name },\r\n+    });\r\n+  };\r\n \r\n-    const updateUser = await db.user.update({\r\n-      where: {\r\n-        clerkId: authUser.id,\r\n-      },\r\n-      data: {\r\n-        name,\r\n-      },\r\n-    })\r\n-    return updateUser\r\n-  }\r\n-\r\n+  // Render the Settings page with user data and forms\r\n   return (\r\n     <div className=\"flex flex-col gap-4\">\r\n       <h1 className=\"sticky top-0 z-[10] flex items-center justify-between border-b bg-background/50 p-6 text-4xl backdrop-blur-lg\">\r\n         <span>Settings</span>\r\n       </h1>\r\n       <div className=\"flex flex-col gap-10 p-6\">\r\n         <div>\r\n           <h2 className=\"text-2xl font-bold\">User Profile</h2>\r\n-          <p className=\"text-base text-white/50\">\r\n-            Add or update your information\r\n-          </p>\r\n+          <p className=\"text-base text-white/50\">Add or update your information</p>\r\n         </div>\r\n         <ProfilePicture\r\n           onDelete={removeProfileImage}\r\n           userImage={user?.profileImage || ''}\r\n@@ -80,8 +65,8 @@\n           />\r\n         )}\r\n       </div>\r\n     </div>\r\n-  )\r\n-}\r\n+  );\r\n+};\r\n \r\n-export default Settings\r\n+export default Settings;\r\n"
                },
                {
                    "date": 1722341849251,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,61 @@\n+import ProfileForm from '@/components/forms/profile-form';\r\n+import React from 'react';\r\n+import ProfilePicture from './_component/profile-picture';\r\n+import { db } from '@/lib/db';\r\n+import { currentUser } from '@clerk/nextjs/server';\r\n+\r\n+const Settings = async () => {\r\n+  const authUser = await currentUser();\r\n+  if (!authUser) return null;\r\n+\r\n+  const user = await db.user.findUnique({ where: { clerkId: authUser.id } });\r\n+  if (!user) return null; // Ensure user exists\r\n+\r\n+  const removeProfileImage = async () => {\r\n+    'use server';\r\n+    return db.user.update({\r\n+      where: { clerkId: authUser.id },\r\n+      data: { profileImage: '' },\r\n+    });\r\n+  };\r\n+\r\n+  const uploadProfileImage = async (image: string) => {\r\n+    'use server';\r\n+    return db.user.update({\r\n+      where: { clerkId: authUser.id },\r\n+      data: { profileImage: image },\r\n+    });\r\n+  };\r\n+\r\n+  const updateUserInfo = async (name: string) => {\r\n+    'use server';\r\n+    return db.user.update({\r\n+      where: { clerkId: authUser.id },\r\n+      data: { name },\r\n+    });\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"flex flex-col gap-4\">\r\n+      <h1 className=\"sticky top-0 z-[10] flex items-center justify-between border-b bg-background/50 p-6 text-4xl backdrop-blur-lg\">\r\n+        <span>Settings</span>\r\n+      </h1>\r\n+      <div className=\"flex flex-col gap-10 p-6\">\r\n+        <div>\r\n+          <h2 className=\"text-2xl font-bold\">User Profile</h2>\r\n+          <p className=\"text-base text-white/50\">\r\n+            Add or update your information\r\n+          </p>\r\n+        </div>\r\n+        <ProfilePicture\r\n+          onDelete={removeProfileImage}\r\n+          userImage={user?.profileImage || ''}\r\n+          onUpload={uploadProfileImage}\r\n+        />\r\n+        <ProfileForm user={user} onUpdate={updateUserInfo} />\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default Settings;\r\n"
                },
                {
                    "date": 1722341900690,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,87 @@\n+import ProfileForm from '@/components/forms/profile-form'\r\n+import React from 'react'\r\n+import ProfilePicture from './_component/profile-picture'\r\n+import { db } from '@/lib/db'\r\n+import { currentUser } from '@clerk/nextjs/server'\r\n+\r\n+type Props = {}\r\n+\r\n+const Settings = async (props: Props) => {\r\n+  const authUser = await currentUser()\r\n+  if (!authUser) return null\r\n+\r\n+  const user = await db.user.findUnique({ where: { clerkId: authUser.id } })\r\n+  \r\n+  console.log('Fetched user:', user) // Add this line to log the user object\r\n+\r\n+  const removeProfileImage = async () => {\r\n+    'use server'\r\n+    const response = await db.user.update({\r\n+      where: {\r\n+        clerkId: authUser.id,\r\n+      },\r\n+      data: {\r\n+        profileImage: '',\r\n+      },\r\n+    })\r\n+    return response\r\n+  }\r\n+\r\n+  const uploadProfileImage = async (image: string) => {\r\n+    'use server'\r\n+    const id = authUser.id\r\n+    const response = await db.user.update({\r\n+      where: {\r\n+        clerkId: id,\r\n+      },\r\n+      data: {\r\n+        profileImage: image,\r\n+      },\r\n+    })\r\n+\r\n+    return response\r\n+  }\r\n+\r\n+  const updateUserInfo = async (name: string) => {\r\n+    'use server'\r\n+\r\n+    const updateUser = await db.user.update({\r\n+      where: {\r\n+        clerkId: authUser.id,\r\n+      },\r\n+      data: {\r\n+        name,\r\n+      },\r\n+    })\r\n+    return updateUser\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"flex flex-col gap-4\">\r\n+      <h1 className=\"sticky top-0 z-[10] flex items-center justify-between border-b bg-background/50 p-6 text-4xl backdrop-blur-lg\">\r\n+        <span>Settings</span>\r\n+      </h1>\r\n+      <div className=\"flex flex-col gap-10 p-6\">\r\n+        <div>\r\n+          <h2 className=\"text-2xl font-bold\">User Profile</h2>\r\n+          <p className=\"text-base text-white/50\">\r\n+            Add or update your information\r\n+          </p>\r\n+        </div>\r\n+        <ProfilePicture\r\n+          onDelete={removeProfileImage}\r\n+          userImage={user?.profileImage || ''}\r\n+          onUpload={uploadProfileImage}\r\n+        />\r\n+        {user && (\r\n+          <ProfileForm\r\n+            user={user}\r\n+            onUpdate={updateUserInfo}\r\n+          />\r\n+        )}\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default Settings\r\n"
                },
                {
                    "date": 1722343050026,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,11 +10,8 @@\n   const authUser = await currentUser()\r\n   if (!authUser) return null\r\n \r\n   const user = await db.user.findUnique({ where: { clerkId: authUser.id } })\r\n-  \r\n-  console.log('Fetched user:', user) // Add this line to log the user object\r\n-\r\n   const removeProfileImage = async () => {\r\n     'use server'\r\n     const response = await db.user.update({\r\n       where: {\r\n@@ -72,16 +69,14 @@\n           onDelete={removeProfileImage}\r\n           userImage={user?.profileImage || ''}\r\n           onUpload={uploadProfileImage}\r\n         />\r\n-        {user && (\r\n-          <ProfileForm\r\n-            user={user}\r\n-            onUpdate={updateUserInfo}\r\n-          />\r\n-        )}\r\n+        <ProfileForm\r\n+          user={user}\r\n+          onUpdate={updateUserInfo}\r\n+        />\r\n       </div>\r\n     </div>\r\n   )\r\n }\r\n \r\n-export default Settings\r\n+export default Settings\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722343363885,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,82 @@\n+import ProfileForm from '@/components/forms/profile-form'\r\n+import React from 'react'\r\n+import ProfilePicture from './_component/profile-picture'\r\n+import { db } from '@/lib/db'\r\n+import { currentUser } from '@clerk/nextjs/server'\r\n+\r\n+type Props = {}\r\n+\r\n+const Settings = async (props: Props) => {\r\n+  const authUser = await currentUser()\r\n+  if (!authUser) return null\r\n+\r\n+  const user = await db.user.findUnique({ where: { clerkId: authUser.id } })\r\n+  const removeProfileImage = async () => {\r\n+    'use server'\r\n+    const response = await db.user.update({\r\n+      where: {\r\n+        clerkId: authUser.id,\r\n+      },\r\n+      data: {\r\n+        profileImage: '',\r\n+      },\r\n+    })\r\n+    return response\r\n+  }\r\n+\r\n+  const uploadProfileImage = async (image: string) => {\r\n+    'use server'\r\n+    const id = authUser.id\r\n+    const response = await db.user.update({\r\n+      where: {\r\n+        clerkId: id,\r\n+      },\r\n+      data: {\r\n+        profileImage: image,\r\n+      },\r\n+    })\r\n+\r\n+    return response\r\n+  }\r\n+\r\n+  const updateUserInfo = async (name: string) => {\r\n+    'use server'\r\n+\r\n+    const updateUser = await db.user.update({\r\n+      where: {\r\n+        clerkId: authUser.id,\r\n+      },\r\n+      data: {\r\n+        name,\r\n+      },\r\n+    })\r\n+    return updateUser\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"flex flex-col gap-4\">\r\n+      <h1 className=\"sticky top-0 z-[10] flex items-center justify-between border-b bg-background/50 p-6 text-4xl backdrop-blur-lg\">\r\n+        <span>Settings</span>\r\n+      </h1>\r\n+      <div className=\"flex flex-col gap-10 p-6\">\r\n+        <div>\r\n+          <h2 className=\"text-2xl font-bold\">User Profile</h2>\r\n+          <p className=\"text-base text-white/50\">\r\n+            Add or update your information\r\n+          </p>\r\n+        </div>\r\n+        <ProfilePicture\r\n+          onDelete={removeProfileImage}\r\n+          userImage={user?.profileImage || ''}\r\n+          onUpload={uploadProfileImage}\r\n+        />\r\n+        <ProfileForm\r\n+          user={user}\r\n+          onUpdate={updateUserInfo}\r\n+        />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default Settings\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722343420339,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,220 +78,5 @@\n     </div>\r\n   )\r\n }\r\n \r\n-export default Settings\n-import ProfileForm from '@/components/forms/profile-form'\r\n-import React from 'react'\r\n-import ProfilePicture from './_component/profile-picture'\r\n-import { db } from '@/lib/db'\r\n-import { currentUser } from '@clerk/nextjs/server'\r\n-\r\n-type Props = {}\r\n-\r\n-const Settings = async (props: Props) => {\r\n-  const authUser = await currentUser()\r\n-  if (!authUser) return null\r\n-\r\n-  const user = await db.user.findUnique({ where: { clerkId: authUser.id } })\r\n-  const removeProfileImage = async () => {\r\n-    'use server'\r\n-    const response = await db.user.update({\r\n-      where: {\r\n-        clerkId: authUser.id,\r\n-      },\r\n-      data: {\r\n-        profileImage: '',\r\n-      },\r\n-    })\r\n-    return response\r\n-  }\r\n-\r\n-  const uploadProfileImage = async (image: string) => {\r\n-    'use server'\r\n-    const id = authUser.id\r\n-    const response = await db.user.update({\r\n-      where: {\r\n-        clerkId: id,\r\n-      },\r\n-      data: {\r\n-        profileImage: image,\r\n-      },\r\n-    })\r\n-\r\n-    return response\r\n-  }\r\n-\r\n-  const updateUserInfo = async (name: string) => {\r\n-    'use server'\r\n-\r\n-    const updateUser = await db.user.update({\r\n-      where: {\r\n-        clerkId: authUser.id,\r\n-      },\r\n-      data: {\r\n-        name,\r\n-      },\r\n-    })\r\n-    return updateUser\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"flex flex-col gap-4\">\r\n-      <h1 className=\"sticky top-0 z-[10] flex items-center justify-between border-b bg-background/50 p-6 text-4xl backdrop-blur-lg\">\r\n-        <span>Settings</span>\r\n-      </h1>\r\n-      <div className=\"flex flex-col gap-10 p-6\">\r\n-        <div>\r\n-          <h2 className=\"text-2xl font-bold\">User Profile</h2>\r\n-          <p className=\"text-base text-white/50\">\r\n-            Add or update your information\r\n-          </p>\r\n-        </div>\r\n-        <ProfilePicture\r\n-          onDelete={removeProfileImage}\r\n-          userImage={user?.profileImage || ''}\r\n-          onUpload={uploadProfileImage}\r\n-        />\r\n-        <ProfileForm\r\n-          user={user}\r\n-          onUpdate={updateUserInfo}\r\n-        />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default Settings\n-import ProfileForm from '@/components/forms/profile-form';\r\n-import React from 'react';\r\n-import ProfilePicture from './_component/profile-picture';\r\n-import { db } from '@/lib/db';\r\n-import { currentUser } from '@clerk/nextjs/server';\r\n-\r\n-const Settings = async () => {\r\n-  const authUser = await currentUser();\r\n-  if (!authUser) return null;\r\n-\r\n-  const user = await db.user.findUnique({ where: { clerkId: authUser.id } });\r\n-  if (!user) return null; // Ensure user exists\r\n-\r\n-  const removeProfileImage = async () => {\r\n-    'use server';\r\n-    return db.user.update({\r\n-      where: { clerkId: authUser.id },\r\n-      data: { profileImage: '' },\r\n-    });\r\n-  };\r\n-\r\n-  const uploadProfileImage = async (image: string) => {\r\n-    'use server';\r\n-    return db.user.update({\r\n-      where: { clerkId: authUser.id },\r\n-      data: { profileImage: image },\r\n-    });\r\n-  };\r\n-\r\n-  const updateUserInfo = async (name: string) => {\r\n-    'use server';\r\n-    return db.user.update({\r\n-      where: { clerkId: authUser.id },\r\n-      data: { name },\r\n-    });\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"flex flex-col gap-4\">\r\n-      <h1 className=\"sticky top-0 z-[10] flex items-center justify-between border-b bg-background/50 p-6 text-4xl backdrop-blur-lg\">\r\n-        <span>Settings</span>\r\n-      </h1>\r\n-      <div className=\"flex flex-col gap-10 p-6\">\r\n-        <div>\r\n-          <h2 className=\"text-2xl font-bold\">User Profile</h2>\r\n-          <p className=\"text-base text-white/50\">\r\n-            Add or update your information\r\n-          </p>\r\n-        </div>\r\n-        <ProfilePicture\r\n-          onDelete={removeProfileImage}\r\n-          userImage={user?.profileImage || ''}\r\n-          onUpload={uploadProfileImage}\r\n-        />\r\n-        <ProfileForm user={user} onUpdate={updateUserInfo} />\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default Settings;\r\n-import ProfileForm from '@/components/forms/profile-form';\r\n-import React from 'react';\r\n-import ProfilePicture from './_component/profile-picture';\r\n-import { db } from '@/lib/db';\r\n-import { currentUser } from '@clerk/nextjs/server';\r\n-\r\n-type Props = {};\r\n-\r\n-const Settings = async (props: Props) => {\r\n-  // Fetch authenticated user\r\n-  const authUser = await currentUser();\r\n-  if (!authUser) return null;\r\n-\r\n-  // Fetch user data from the database\r\n-  const user = await db.user.findUnique({ where: { clerkId: authUser.id } });\r\n-\r\n-  // Log the fetched user data for debugging\r\n-  console.log('Fetched user:', user);\r\n-\r\n-  // Define server-side functions for updating user data\r\n-  const removeProfileImage = async () => {\r\n-    'use server';\r\n-    return db.user.update({\r\n-      where: { clerkId: authUser.id },\r\n-      data: { profileImage: '' },\r\n-    });\r\n-  };\r\n-\r\n-  const uploadProfileImage = async (image: string) => {\r\n-    'use server';\r\n-    return db.user.update({\r\n-      where: { clerkId: authUser.id },\r\n-      data: { profileImage: image },\r\n-    });\r\n-  };\r\n-\r\n-  const updateUserInfo = async (name: string) => {\r\n-    'use server';\r\n-    return db.user.update({\r\n-      where: { clerkId: authUser.id },\r\n-      data: { name },\r\n-    });\r\n-  };\r\n-\r\n-  // Render the Settings page with user data and forms\r\n-  return (\r\n-    <div className=\"flex flex-col gap-4\">\r\n-      <h1 className=\"sticky top-0 z-[10] flex items-center justify-between border-b bg-background/50 p-6 text-4xl backdrop-blur-lg\">\r\n-        <span>Settings</span>\r\n-      </h1>\r\n-      <div className=\"flex flex-col gap-10 p-6\">\r\n-        <div>\r\n-          <h2 className=\"text-2xl font-bold\">User Profile</h2>\r\n-          <p className=\"text-base text-white/50\">Add or update your information</p>\r\n-        </div>\r\n-        <ProfilePicture\r\n-          onDelete={removeProfileImage}\r\n-          userImage={user?.profileImage || ''}\r\n-          onUpload={uploadProfileImage}\r\n-        />\r\n-        {user && (\r\n-          <ProfileForm\r\n-            user={user}\r\n-            onUpdate={updateUserInfo}\r\n-          />\r\n-        )}\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default Settings;\n\\ No newline at end of file\n+export default Settings\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722344195774,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,8 +10,11 @@\n   const authUser = await currentUser()\r\n   if (!authUser) return null\r\n \r\n   const user = await db.user.findUnique({ where: { clerkId: authUser.id } })\r\n+  \r\n+  console.log('Fetched user:', user) // Add this line to log the user object\r\n+\r\n   const removeProfileImage = async () => {\r\n     'use server'\r\n     const response = await db.user.update({\r\n       where: {\r\n@@ -69,14 +72,16 @@\n           onDelete={removeProfileImage}\r\n           userImage={user?.profileImage || ''}\r\n           onUpload={uploadProfileImage}\r\n         />\r\n-        <ProfileForm\r\n-          user={user}\r\n-          onUpdate={updateUserInfo}\r\n-        />\r\n+        {user && (\r\n+          <ProfileForm\r\n+            user={user}\r\n+            onUpdate={updateUserInfo}\r\n+          />\r\n+        )}\r\n\\ No newline at end of file\n       </div>\r\n     </div>\r\n   )\r\n }\r\n \r\n-export default Settings\n+export default Settings\r\n"
                },
                {
                    "date": 1722344276675,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,14 +74,14 @@\n           onUpload={uploadProfileImage}\r\n         />\r\n         {user && (\r\n           <ProfileForm\r\n-            user={user}\r\n-            onUpdate={updateUserInfo}\r\n+            // user={user}\r\n+            // onUpdate={updateUserInfo}\r\n           />\r\n         )}\r\n       </div>\r\n     </div>\r\n   )\r\n }\r\n\\ No newline at end of file\n \r\n-export default Settings\n+export default Settings\r\n"
                },
                {
                    "date": 1722344366540,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,14 +74,14 @@\n           onUpload={uploadProfileImage}\r\n         />\r\n         {user && (\r\n           <ProfileForm\r\n-            // user={user}\r\n-            // onUpdate={updateUserInfo}\r\n+            user={user}\r\n+            onUpdate={updateUserInfo}\r\n           />\r\n         )}\r\n       </div>\r\n     </div>\r\n   )\r\n }\r\n\\ No newline at end of file\n \r\n-export default Settings\n+export default Settings\r\n"
                },
                {
                    "date": 1722344833767,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,5 +83,5 @@\n     </div>\r\n   )\r\n }\r\n \r\n-export default Settings\n\\ No newline at end of file\n+export default Settings\r\n"
                },
                {
                    "date": 1722345526360,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,10 +74,10 @@\n           onUpload={uploadProfileImage}\r\n         />\r\n         {user && (\r\n           <ProfileForm\r\n-            user={user}\r\n-            onUpdate={updateUserInfo}\r\n+            // user={user}\r\n+            // onUpdate={updateUserInfo}\r\n           />\r\n         )}\r\n       </div>\r\n     </div>\r\n"
                },
                {
                    "date": 1722345804989,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,63 +6,63 @@\n \r\n type Props = {}\r\n \r\n const Settings = async (props: Props) => {\r\n-  const authUser = await currentUser()\r\n-  if (!authUser) return null\r\n+  // const authUser = await currentUser()\r\n+  // if (!authUser) return null\r\n \r\n-  const user = await db.user.findUnique({ where: { clerkId: authUser.id } })\r\n+  // const user = await db.user.findUnique({ where: { clerkId: authUser.id } })\r\n   \r\n-  console.log('Fetched user:', user) // Add this line to log the user object\r\n+  // console.log('Fetched user:', user) // Add this line to log the user object\r\n \r\n-  const removeProfileImage = async () => {\r\n-    'use server'\r\n-    const response = await db.user.update({\r\n-      where: {\r\n-        clerkId: authUser.id,\r\n-      },\r\n-      data: {\r\n-        profileImage: '',\r\n-      },\r\n-    })\r\n-    return response\r\n-  }\r\n+  // const removeProfileImage = async () => {\r\n+  //   'use server'\r\n+  //   const response = await db.user.update({\r\n+  //     where: {\r\n+  //       clerkId: authUser.id,\r\n+  //     },\r\n+  //     data: {\r\n+  //       profileImage: '',\r\n+  //     },\r\n+  //   })\r\n+  //   return response\r\n+  // }\r\n \r\n-  const uploadProfileImage = async (image: string) => {\r\n-    'use server'\r\n-    const id = authUser.id\r\n-    const response = await db.user.update({\r\n-      where: {\r\n-        clerkId: id,\r\n-      },\r\n-      data: {\r\n-        profileImage: image,\r\n-      },\r\n-    })\r\n+  // const uploadProfileImage = async (image: string) => {\r\n+  //   'use server'\r\n+  //   const id = authUser.id\r\n+  //   const response = await db.user.update({\r\n+  //     where: {\r\n+  //       clerkId: id,\r\n+  //     },\r\n+  //     data: {\r\n+  //       profileImage: image,\r\n+  //     },\r\n+  //   })\r\n \r\n-    return response\r\n-  }\r\n+  //   return response\r\n+  // }\r\n \r\n-  const updateUserInfo = async (name: string) => {\r\n-    'use server'\r\n+  // const updateUserInfo = async (name: string) => {\r\n+  //   'use server'\r\n \r\n-    const updateUser = await db.user.update({\r\n-      where: {\r\n-        clerkId: authUser.id,\r\n-      },\r\n-      data: {\r\n-        name,\r\n-      },\r\n-    })\r\n-    return updateUser\r\n-  }\r\n+  //   const updateUser = await db.user.update({\r\n+  //     where: {\r\n+  //       clerkId: authUser.id,\r\n+  //     },\r\n+  //     data: {\r\n+  //       name,\r\n+  //     },\r\n+  //   })\r\n+  //   return updateUser\r\n+  // }\r\n \r\n   return (\r\n     <div className=\"flex flex-col gap-4\">\r\n       <h1 className=\"sticky top-0 z-[10] flex items-center justify-between border-b bg-background/50 p-6 text-4xl backdrop-blur-lg\">\r\n         <span>Settings</span>\r\n       </h1>\r\n-      <div className=\"flex flex-col gap-10 p-6\">\r\n+      {/* <div className=\"flex flex-col gap-10 p-6\">\r\n         <div>\r\n           <h2 className=\"text-2xl font-bold\">User Profile</h2>\r\n           <p className=\"text-base text-white/50\">\r\n             Add or update your information\r\n@@ -78,9 +78,9 @@\n             // user={user}\r\n             // onUpdate={updateUserInfo}\r\n           />\r\n         )}\r\n-      </div>\r\n+      </div> */}\r\n     </div>\r\n   )\r\n }\r\n \r\n"
                },
                {
                    "date": 1722346299032,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,25 +60,25 @@\n     <div className=\"flex flex-col gap-4\">\r\n       <h1 className=\"sticky top-0 z-[10] flex items-center justify-between border-b bg-background/50 p-6 text-4xl backdrop-blur-lg\">\r\n         <span>Settings</span>\r\n       </h1>\r\n-      {/* <div className=\"flex flex-col gap-10 p-6\">\r\n+       <div className=\"flex flex-col gap-10 p-6\">\r\n         <div>\r\n           <h2 className=\"text-2xl font-bold\">User Profile</h2>\r\n           <p className=\"text-base text-white/50\">\r\n             Add or update your information\r\n           </p>\r\n         </div>\r\n-        <ProfilePicture\r\n+        {/* <ProfilePicture\r\n           onDelete={removeProfileImage}\r\n           userImage={user?.profileImage || ''}\r\n           onUpload={uploadProfileImage}\r\n         />\r\n         {user && (\r\n           <ProfileForm\r\n             // user={user}\r\n             // onUpdate={updateUserInfo}\r\n-          />\r\n+          /> */}\r\n         )}\r\n       </div> */}\r\n     </div>\r\n   )\r\n"
                },
                {
                    "date": 1722346322765,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,27 +60,28 @@\n     <div className=\"flex flex-col gap-4\">\r\n       <h1 className=\"sticky top-0 z-[10] flex items-center justify-between border-b bg-background/50 p-6 text-4xl backdrop-blur-lg\">\r\n         <span>Settings</span>\r\n       </h1>\r\n-       <div className=\"flex flex-col gap-10 p-6\">\r\n+      <div className=\"flex flex-col gap-10 p-6\">\r\n         <div>\r\n           <h2 className=\"text-2xl font-bold\">User Profile</h2>\r\n           <p className=\"text-base text-white/50\">\r\n             Add or update your information\r\n           </p>\r\n         </div>\r\n-        {/* <ProfilePicture\r\n+        {/* \r\n+        <ProfilePicture\r\n           onDelete={removeProfileImage}\r\n           userImage={user?.profileImage || ''}\r\n           onUpload={uploadProfileImage}\r\n         />\r\n         {user && (\r\n           <ProfileForm\r\n             // user={user}\r\n             // onUpdate={updateUserInfo}\r\n-          /> */}\r\n-        )}\r\n-      </div> */}\r\n+          />\r\n+        )} */}\r\n+      </div>\r\n     </div>\r\n   )\r\n }\r\n \r\n"
                },
                {
                    "date": 1722353412913,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,9 +78,11 @@\n           <ProfileForm\r\n             // user={user}\r\n             // onUpdate={updateUserInfo}\r\n           />\r\n+        \r\n         )} */}\r\n+        <ProfileForm/>\r\n       </div>\r\n     </div>\r\n   )\r\n }\r\n"
                },
                {
                    "date": 1723273582608,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,90 @@\n+import ProfileForm from '@/components/forms/profile-form'\r\n+import React from 'react'\r\n+import ProfilePicture from './_component/profile-picture'\r\n+import { db } from '@/lib/db'\r\n+import { currentUser } from '@clerk/nextjs/server'\r\n+\r\n+type Props = {}\r\n+\r\n+const Settings = async (props: Props) => {\r\n+  // const authUser = await currentUser()\r\n+  // if (!authUser) return null\r\n+\r\n+  // const user = await db.user.findUnique({ where: { clerkId: authUser.id } })\r\n+  \r\n+  // console.log('Fetched user:', user) // Add this line to log the user object\r\n+\r\n+  // const removeProfileImage = async () => {\r\n+  //   'use server'\r\n+  //   const response = await db.user.update({\r\n+  //     where: {\r\n+  //       clerkId: authUser.id,\r\n+  //     },\r\n+  //     data: {\r\n+  //       profileImage: '',\r\n+  //     },\r\n+  //   })\r\n+  //   return response\r\n+  // }\r\n+\r\n+  // const uploadProfileImage = async (image: string) => {\r\n+  //   'use server'\r\n+  //   const id = authUser.id\r\n+  //   const response = await db.user.update({\r\n+  //     where: {\r\n+  //       clerkId: id,\r\n+  //     },\r\n+  //     data: {\r\n+  //       profileImage: image,\r\n+  //     },\r\n+  //   })\r\n+\r\n+  //   return response\r\n+  // }\r\n+\r\n+  // const updateUserInfo = async (name: string) => {\r\n+  //   'use server'\r\n+\r\n+  //   const updateUser = await db.user.update({\r\n+  //     where: {\r\n+  //       clerkId: authUser.id,\r\n+  //     },\r\n+  //     data: {\r\n+  //       name,\r\n+  //     },\r\n+  //   })\r\n+  //   return updateUser\r\n+  // }\r\n+\r\n+  return (\r\n+    <div className=\"flex flex-col gap-4\">\r\n+      <h1 className=\"sticky top-0 z-[10] flex items-center justify-between border-b bg-background/50 p-6 text-4xl backdrop-blur-lg\">\r\n+        <span>Settings</span>\r\n+      </h1>\r\n+      <div className=\"flex flex-col gap-10 p-6\">\r\n+        <div>\r\n+          <h2 className=\"text-2xl font-bold\">User Profile</h2>\r\n+          <p className=\"text-base text-white/50\">\r\n+            Add or update your information\r\n+          </p>\r\n+        </div>\r\n+        \r\n+        <ProfilePicture\r\n+          onDelete={removeProfileImage}\r\n+          userImage={user?.profileImage || ''}\r\n+          onUpload={uploadProfileImage}\r\n+        />\r\n+        {/* {user && (\r\n+          <ProfileForm\r\n+            // user={user}\r\n+            // onUpdate={updateUserInfo}\r\n+          />\r\n+        \r\n+        )} */}\r\n+        <ProfileForm/>\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default Settings\r\n"
                },
                {
                    "date": 1723274211341,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,90 @@\n+import ProfileForm from '@/components/forms/profile-form'\r\n+import React from 'react'\r\n+import ProfilePicture from './_component/profile-picture'\r\n+import { db } from '@/lib/db'\r\n+import { currentUser } from '@clerk/nextjs/server'\r\n+\r\n+type Props = {}\r\n+\r\n+const Settings = async (props: Props) => {\r\n+  // const authUser = await currentUser()\r\n+  // if (!authUser) return null\r\n+\r\n+  // const user = await db.user.findUnique({ where: { clerkId: authUser.id } })\r\n+  \r\n+  // console.log('Fetched user:', user) // Add this line to log the user object\r\n+\r\n+  const removeProfileImage = async () => {\r\n+    'use server'\r\n+    const response = await db.user.update({\r\n+      where: {\r\n+        clerkId: authUser.id,\r\n+      },\r\n+      data: {\r\n+        profileImage: '',\r\n+      },\r\n+    })\r\n+    return response\r\n+  }\r\n+\r\n+  // const uploadProfileImage = async (image: string) => {\r\n+  //   'use server'\r\n+  //   const id = authUser.id\r\n+  //   const response = await db.user.update({\r\n+  //     where: {\r\n+  //       clerkId: id,\r\n+  //     },\r\n+  //     data: {\r\n+  //       profileImage: image,\r\n+  //     },\r\n+  //   })\r\n+\r\n+  //   return response\r\n+  // }\r\n+\r\n+  // const updateUserInfo = async (name: string) => {\r\n+  //   'use server'\r\n+\r\n+  //   const updateUser = await db.user.update({\r\n+  //     where: {\r\n+  //       clerkId: authUser.id,\r\n+  //     },\r\n+  //     data: {\r\n+  //       name,\r\n+  //     },\r\n+  //   })\r\n+  //   return updateUser\r\n+  // }\r\n+\r\n+  return (\r\n+    <div className=\"flex flex-col gap-4\">\r\n+      <h1 className=\"sticky top-0 z-[10] flex items-center justify-between border-b bg-background/50 p-6 text-4xl backdrop-blur-lg\">\r\n+        <span>Settings</span>\r\n+      </h1>\r\n+      <div className=\"flex flex-col gap-10 p-6\">\r\n+        <div>\r\n+          <h2 className=\"text-2xl font-bold\">User Profile</h2>\r\n+          <p className=\"text-base text-white/50\">\r\n+            Add or update your information\r\n+          </p>\r\n+        </div>\r\n+        \r\n+        {/* <ProfilePicture\r\n+          onDelete={removeProfileImage}\r\n+          userImage={user?.profileImage || ''}\r\n+          onUpload={uploadProfileImage}\r\n+        /> */}\r\n+        {/* {user && (\r\n+          <ProfileForm\r\n+            // user={user}\r\n+            // onUpdate={updateUserInfo}\r\n+          />\r\n+        \r\n+        )} */}\r\n+        <ProfileForm/>\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default Settings\r\n"
                },
                {
                    "date": 1723970425650,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,82 @@\n+import ProfileForm from '@/components/forms/profile-form'\r\n+import React from 'react'\r\n+import ProfilePicture from './_component/profile-picture'\r\n+import { db } from '@/lib/db'\r\n+import { currentUser } from '@clerk/nextjs/server'\r\n+\r\n+type Props = {}\r\n+\r\n+const Settings = async (props: Props) => {\r\n+  const authUser = await currentUser()\r\n+  if (!authUser) return null\r\n+\r\n+  const user = await db.user.findUnique({ where: { clerkId: authUser.id } })\r\n+  const removeProfileImage = async () => {\r\n+    'use server'\r\n+    const response = await db.user.update({\r\n+      where: {\r\n+        clerkId: authUser.id,\r\n+      },\r\n+      data: {\r\n+        profileImage: '',\r\n+      },\r\n+    })\r\n+    return response\r\n+  }\r\n+\r\n+  const uploadProfileImage = async (image: string) => {\r\n+    'use server'\r\n+    const id = authUser.id\r\n+    const response = await db.user.update({\r\n+      where: {\r\n+        clerkId: id,\r\n+      },\r\n+      data: {\r\n+        profileImage: image,\r\n+      },\r\n+    })\r\n+\r\n+    return response\r\n+  }\r\n+\r\n+  const updateUserInfo = async (name: string) => {\r\n+    'use server'\r\n+\r\n+    const updateUser = await db.user.update({\r\n+      where: {\r\n+        clerkId: authUser.id,\r\n+      },\r\n+      data: {\r\n+        name,\r\n+      },\r\n+    })\r\n+    return updateUser\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"flex flex-col gap-4\">\r\n+      <h1 className=\"sticky top-0 z-[10] flex items-center justify-between border-b bg-background/50 p-6 text-4xl backdrop-blur-lg\">\r\n+        <span>Settings</span>\r\n+      </h1>\r\n+      <div className=\"flex flex-col gap-10 p-6\">\r\n+        <div>\r\n+          <h2 className=\"text-2xl font-bold\">User Profile</h2>\r\n+          <p className=\"text-base text-white/50\">\r\n+            Add or update your information\r\n+          </p>\r\n+        </div>\r\n+        <ProfilePicture\r\n+          onDelete={removeProfileImage}\r\n+          userImage={user?.profileImage || ''}\r\n+          onUpload={uploadProfileImage}\r\n+        />\r\n+        <ProfileForm\r\n+          // user={user}\r\n+          // onUpdate={updateUserInfo}\r\n+        />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default Settings\r\n"
                },
                {
                    "date": 1725197550725,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,283 +70,13 @@\n           userImage={user?.profileImage || ''}\r\n           onUpload={uploadProfileImage}\r\n         />\r\n         <ProfileForm\r\n-          // user={user}\r\n-          // onUpdate={updateUserInfo}\r\n+          user={user}\r\n+          onUpdate={updateUserInfo}\r\n         />\r\n       </div>\r\n     </div>\r\n   )\r\n }\r\n \r\n export default Settings\r\n-import ProfileForm from '@/components/forms/profile-form'\r\n-import React from 'react'\r\n-import ProfilePicture from './_component/profile-picture'\r\n-import { db } from '@/lib/db'\r\n-import { currentUser } from '@clerk/nextjs/server'\r\n-\r\n-type Props = {}\r\n-\r\n-const Settings = async (props: Props) => {\r\n-  // const authUser = await currentUser()\r\n-  // if (!authUser) return null\r\n-\r\n-  // const user = await db.user.findUnique({ where: { clerkId: authUser.id } })\r\n-  \r\n-  // console.log('Fetched user:', user) // Add this line to log the user object\r\n-\r\n-  const removeProfileImage = async () => {\r\n-    'use server'\r\n-    const response = await db.user.update({\r\n-      where: {\r\n-        clerkId: authUser.id,\r\n-      },\r\n-      data: {\r\n-        profileImage: '',\r\n-      },\r\n-    })\r\n-    return response\r\n-  }\r\n-\r\n-  // const uploadProfileImage = async (image: string) => {\r\n-  //   'use server'\r\n-  //   const id = authUser.id\r\n-  //   const response = await db.user.update({\r\n-  //     where: {\r\n-  //       clerkId: id,\r\n-  //     },\r\n-  //     data: {\r\n-  //       profileImage: image,\r\n-  //     },\r\n-  //   })\r\n-\r\n-  //   return response\r\n-  // }\r\n-\r\n-  // const updateUserInfo = async (name: string) => {\r\n-  //   'use server'\r\n-\r\n-  //   const updateUser = await db.user.update({\r\n-  //     where: {\r\n-  //       clerkId: authUser.id,\r\n-  //     },\r\n-  //     data: {\r\n-  //       name,\r\n-  //     },\r\n-  //   })\r\n-  //   return updateUser\r\n-  // }\r\n-\r\n-  return (\r\n-    <div className=\"flex flex-col gap-4\">\r\n-      <h1 className=\"sticky top-0 z-[10] flex items-center justify-between border-b bg-background/50 p-6 text-4xl backdrop-blur-lg\">\r\n-        <span>Settings</span>\r\n-      </h1>\r\n-      <div className=\"flex flex-col gap-10 p-6\">\r\n-        <div>\r\n-          <h2 className=\"text-2xl font-bold\">User Profile</h2>\r\n-          <p className=\"text-base text-white/50\">\r\n-            Add or update your information\r\n-          </p>\r\n-        </div>\r\n-        \r\n-        {/* <ProfilePicture\r\n-          onDelete={removeProfileImage}\r\n-          userImage={user?.profileImage || ''}\r\n-          onUpload={uploadProfileImage}\r\n-        /> */}\r\n-        {/* {user && (\r\n-          <ProfileForm\r\n-            // user={user}\r\n-            // onUpdate={updateUserInfo}\r\n-          />\r\n-        \r\n-        )} */}\r\n-        <ProfileForm/>\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default Settings\r\n-import ProfileForm from '@/components/forms/profile-form'\r\n-import React from 'react'\r\n-import ProfilePicture from './_component/profile-picture'\r\n-import { db } from '@/lib/db'\r\n-import { currentUser } from '@clerk/nextjs/server'\r\n-\r\n-type Props = {}\r\n-\r\n-const Settings = async (props: Props) => {\r\n-  // const authUser = await currentUser()\r\n-  // if (!authUser) return null\r\n-\r\n-  // const user = await db.user.findUnique({ where: { clerkId: authUser.id } })\r\n-  \r\n-  // console.log('Fetched user:', user) // Add this line to log the user object\r\n-\r\n-  // const removeProfileImage = async () => {\r\n-  //   'use server'\r\n-  //   const response = await db.user.update({\r\n-  //     where: {\r\n-  //       clerkId: authUser.id,\r\n-  //     },\r\n-  //     data: {\r\n-  //       profileImage: '',\r\n-  //     },\r\n-  //   })\r\n-  //   return response\r\n-  // }\r\n-\r\n-  // const uploadProfileImage = async (image: string) => {\r\n-  //   'use server'\r\n-  //   const id = authUser.id\r\n-  //   const response = await db.user.update({\r\n-  //     where: {\r\n-  //       clerkId: id,\r\n-  //     },\r\n-  //     data: {\r\n-  //       profileImage: image,\r\n-  //     },\r\n-  //   })\r\n-\r\n-  //   return response\r\n-  // }\r\n-\r\n-  // const updateUserInfo = async (name: string) => {\r\n-  //   'use server'\r\n-\r\n-  //   const updateUser = await db.user.update({\r\n-  //     where: {\r\n-  //       clerkId: authUser.id,\r\n-  //     },\r\n-  //     data: {\r\n-  //       name,\r\n-  //     },\r\n-  //   })\r\n-  //   return updateUser\r\n-  // }\r\n-\r\n-  return (\r\n-    <div className=\"flex flex-col gap-4\">\r\n-      <h1 className=\"sticky top-0 z-[10] flex items-center justify-between border-b bg-background/50 p-6 text-4xl backdrop-blur-lg\">\r\n-        <span>Settings</span>\r\n-      </h1>\r\n-      <div className=\"flex flex-col gap-10 p-6\">\r\n-        <div>\r\n-          <h2 className=\"text-2xl font-bold\">User Profile</h2>\r\n-          <p className=\"text-base text-white/50\">\r\n-            Add or update your information\r\n-          </p>\r\n-        </div>\r\n-        \r\n-        <ProfilePicture\r\n-          onDelete={removeProfileImage}\r\n-          userImage={user?.profileImage || ''}\r\n-          onUpload={uploadProfileImage}\r\n-        />\r\n-        {/* {user && (\r\n-          <ProfileForm\r\n-            // user={user}\r\n-            // onUpdate={updateUserInfo}\r\n-          />\r\n-        \r\n-        )} */}\r\n-        <ProfileForm/>\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default Settings\r\n-import ProfileForm from '@/components/forms/profile-form'\r\n-import React from 'react'\r\n-import ProfilePicture from './_component/profile-picture'\r\n-import { db } from '@/lib/db'\r\n-import { currentUser } from '@clerk/nextjs/server'\r\n-\r\n-type Props = {}\r\n-\r\n-const Settings = async (props: Props) => {\r\n-  // const authUser = await currentUser()\r\n-  // if (!authUser) return null\r\n-\r\n-  // const user = await db.user.findUnique({ where: { clerkId: authUser.id } })\r\n-  \r\n-  // console.log('Fetched user:', user) // Add this line to log the user object\r\n-\r\n-  // const removeProfileImage = async () => {\r\n-  //   'use server'\r\n-  //   const response = await db.user.update({\r\n-  //     where: {\r\n-  //       clerkId: authUser.id,\r\n-  //     },\r\n-  //     data: {\r\n-  //       profileImage: '',\r\n-  //     },\r\n-  //   })\r\n-  //   return response\r\n-  // }\r\n-\r\n-  // const uploadProfileImage = async (image: string) => {\r\n-  //   'use server'\r\n-  //   const id = authUser.id\r\n-  //   const response = await db.user.update({\r\n-  //     where: {\r\n-  //       clerkId: id,\r\n-  //     },\r\n-  //     data: {\r\n-  //       profileImage: image,\r\n-  //     },\r\n-  //   })\r\n-\r\n-  //   return response\r\n-  // }\r\n-\r\n-  // const updateUserInfo = async (name: string) => {\r\n-  //   'use server'\r\n-\r\n-  //   const updateUser = await db.user.update({\r\n-  //     where: {\r\n-  //       clerkId: authUser.id,\r\n-  //     },\r\n-  //     data: {\r\n-  //       name,\r\n-  //     },\r\n-  //   })\r\n-  //   return updateUser\r\n-  // }\r\n-\r\n-  return (\r\n-    <div className=\"flex flex-col gap-4\">\r\n-      <h1 className=\"sticky top-0 z-[10] flex items-center justify-between border-b bg-background/50 p-6 text-4xl backdrop-blur-lg\">\r\n-        <span>Settings</span>\r\n-      </h1>\r\n-      <div className=\"flex flex-col gap-10 p-6\">\r\n-        <div>\r\n-          <h2 className=\"text-2xl font-bold\">User Profile</h2>\r\n-          <p className=\"text-base text-white/50\">\r\n-            Add or update your information\r\n-          </p>\r\n-        </div>\r\n-        {/* \r\n-        <ProfilePicture\r\n-          onDelete={removeProfileImage}\r\n-          userImage={user?.profileImage || ''}\r\n-          onUpload={uploadProfileImage}\r\n-        />\r\n-        {user && (\r\n-          <ProfileForm\r\n-            // user={user}\r\n-            // onUpdate={updateUserInfo}\r\n-          />\r\n-        \r\n-        )} */}\r\n-        <ProfileForm/>\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default Settings\r\n"
                }
            ],
            "date": 1716727714027,
            "name": "Commit-0",
            "content": "import Profileform from '@/components/forms/profile-form';\r\nimport React from 'react';\r\n// import ProfilePicture from './_components/profile-picture';\r\n// import { db } from '@/lib/db'\r\n\r\ntype Props = {};\r\n\r\nconst Settings = (props: Props) => {\r\n  // const removeProfileImage = async () => {\r\n  //   'use server'\r\n  //   const response = await db.user.update({\r\n  //     where: {\r\n  //       clerkId: authUser.id,\r\n  //     },\r\n  //     data: {\r\n  //       profileImage: '',\r\n  //     },\r\n  //   })\r\n  //   return response\r\n  // }\r\n  return (\r\n    <div className=\"flex flex-col gap-4\">\r\n      <h1 className=\"sticky top-0 z-[10] flex items-center justify-between border-b bg-background/50 p-6 text-4xl backdrop-blur-lg\">\r\n        <span>Settings</span>\r\n      </h1>\r\n      <div className=\"flex flex-col gap-10 p-6\">\r\n        <div>\r\n          <h2 className=\"text-2xl font-bold\">User Profile</h2>\r\n          <p className=\"text-base text-white/50\">\r\n            Add or update your information\r\n          </p>\r\n        </div>\r\n        {/* <ProfilePicture\r\n                  onDelete={removeProfileImage}\r\n                  userImage={user?.profileImage || ''}\r\n                  onUpload={uploadProfileImage}/> */}\r\n      \r\n          <Profileform/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n"
        }
    ]
}