{
    "sourceFile": "src/app/(main)/(pages)/workflows/editor/[editorid]/_components/editor-canvas-sidebar.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1741945381886,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1741946894751,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import React from 'react';\r\n \r\n import { useNodeConnections } from '@/providers/connections-provider';\r\n import { useEditor } from '@/providers/editor-provider';\r\n-// import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\r\n+import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\r\n import { Separator } from '@/components/ui/separator';\r\n import { Card, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\n import { CONNECTIONS, EditorCanvasDefaultCardTypes } from '@/lib/constant';\r\n \r\n@@ -19,9 +19,14 @@\n const EditorCanvasSidebar = ({ nodes }: Props) => {\r\n   const { state } = useEditor();\r\n   const { nodeConnection } = useNodeConnections();\r\n \r\n-  return <div>\r\n-    EditorCanvasSidebar\r\n-  </div>\r\n+  return <aside>\r\n+    <Tabs defaultValue=\"actions\" className=\"h-screen overflow-scroll pb-24\">\r\n+        <TabsList className=\"bg-transparent\">\r\n+          <TabsTrigger value=\"actions\">Actions</TabsTrigger>\r\n+          <TabsTrigger value=\"settings\">Settings</TabsTrigger>\r\n+        </TabsList>\r\n+    </Tabs>\r\n+  </aside>\r\n }\r\n export default EditorCanvasSidebar;\r\n"
                },
                {
                    "date": 1741956861939,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,11 +7,11 @@\n import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\r\n import { Separator } from '@/components/ui/separator';\r\n import { Card, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\n import { CONNECTIONS, EditorCanvasDefaultCardTypes } from '@/lib/constant';\r\n-\r\n+import { onDragStart } from '@/lib/editor-utlis';\r\n import EditorCanvasIconHelper from './editor-canvas-card-icon-helper';\r\n-import { EditorCanvasTypes, EditorNodeType } from '@/lib/type';\r\n+import { EditorCanvasTypes, EditorNodeType } from '@/lib/types';\r\n \r\n type Props = {\r\n   nodes: EditorNodeType[];\r\n };\r\n@@ -25,8 +25,39 @@\n         <TabsList className=\"bg-transparent\">\r\n           <TabsTrigger value=\"actions\">Actions</TabsTrigger>\r\n           <TabsTrigger value=\"settings\">Settings</TabsTrigger>\r\n         </TabsList>\r\n+        <Separator />\r\n+        <TabsContent value=\"actions\" className=\"flex flex-col gap-4 p-4\">\r\n+          {Object.entries(EditorCanvasDefaultCardTypes)\r\n+            .filter(\r\n+              ([_, cardType]) =>\r\n+                (!nodes.length && cardType.type === 'Trigger') ||\r\n+                (nodes.length && cardType.type === 'Action')\r\n+            )\r\n+            .map(([cardKey, cardValue]) => (\r\n+              <Card\r\n+                key={cardKey}\r\n+                draggable\r\n+                className=\"w-full cursor-grab border-black bg-neutral-100 dark:border-neutral-700 dark:bg-neutral-900\"\r\n+                onDragStart={(event) =>\r\n+                  onDragStart(event, cardKey as EditorCanvasTypes)\r\n+                }\r\n+              >\r\n+                <CardHeader className=\"flex flex-row items-center gap-4 p-4\">\r\n+                  <EditorCanvasIconHelper type={cardKey as EditorCanvasTypes} />\r\n+                  <CardTitle className=\"text-md\">\r\n+                    {cardKey}\r\n+                    <CardDescription>{cardValue.description}</CardDescription>\r\n+                  </CardTitle>\r\n+                </CardHeader>\r\n+              </Card>\r\n+            ))}\r\n+        </TabsContent>\r\n+        <TabsContent value=\"settings\" className=\"p-4\">\r\n+          <p>Settings content goes here.</p>\r\n+        </TabsContent>\r\n+      \r\n     </Tabs>\r\n   </aside>\r\n }\r\n export default EditorCanvasSidebar;\r\n"
                },
                {
                    "date": 1741956876592,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\r\n import { Separator } from '@/components/ui/separator';\r\n import { Card, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\n import { CONNECTIONS, EditorCanvasDefaultCardTypes } from '@/lib/constant';\r\n-import { onDragStart } from '@/lib/editor-utlis';\r\n+import { onDragStart } from '@/lib/editor-utils';\r\n import EditorCanvasIconHelper from './editor-canvas-card-icon-helper';\r\n import { EditorCanvasTypes, EditorNodeType } from '@/lib/types';\r\n \r\n type Props = {\r\n"
                }
            ],
            "date": 1741945381886,
            "name": "Commit-0",
            "content": "'use client';\r\n\r\nimport React from 'react';\r\n\r\nimport { useNodeConnections } from '@/providers/connections-provider';\r\nimport { useEditor } from '@/providers/editor-provider';\r\n// import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\r\nimport { Separator } from '@/components/ui/separator';\r\nimport { Card, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { CONNECTIONS, EditorCanvasDefaultCardTypes } from '@/lib/constant';\r\n\r\nimport EditorCanvasIconHelper from './editor-canvas-card-icon-helper';\r\nimport { EditorCanvasTypes, EditorNodeType } from '@/lib/type';\r\n\r\ntype Props = {\r\n  nodes: EditorNodeType[];\r\n};\r\n\r\nconst EditorCanvasSidebar = ({ nodes }: Props) => {\r\n  const { state } = useEditor();\r\n  const { nodeConnection } = useNodeConnections();\r\n\r\n  return <div>\r\n    EditorCanvasSidebar\r\n  </div>\r\n}\r\nexport default EditorCanvasSidebar;\r\n"
        }
    ]
}