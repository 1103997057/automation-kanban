{
    "sourceFile": "src/middleware.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1718557919245,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1718628339709,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,14 +18,17 @@\n   '/api/flow',\r\n   '/api/cron/wait',\r\n ];\r\n \r\n+// Create a route matcher function\r\n+const isRouteMatched = (pathname: string, routes: string[]) => routes.includes(pathname);\r\n+\r\n // Custom handler to manage public and ignored routes\r\n const handler = (req: NextRequest, event: NextFetchEvent) => {\r\n   const { pathname } = req.nextUrl;\r\n \r\n   // Check if the route is public or ignored\r\n-  if (publicRoutes.includes(pathname) || ignoredRoutes.includes(pathname)) {\r\n+  if (isRouteMatched(pathname, publicRoutes) || isRouteMatched(pathname, ignoredRoutes)) {\r\n     return NextResponse.next();\r\n   }\r\n \r\n   // Apply Clerk middleware for protected routes\r\n"
                },
                {
                    "date": 1718805142071,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,26 +9,22 @@\n   '/api/clerk-webhook',\r\n   '/api/drive-activity/notification',\r\n   '/api/payment/success',\r\n ];\r\n-\r\n const ignoredRoutes = [\r\n   '/api/auth/callback/discord',\r\n   '/api/auth/callback/notion',\r\n   '/api/auth/callback/slack',\r\n   '/api/flow',\r\n   '/api/cron/wait',\r\n ];\r\n \r\n-// Create a route matcher function\r\n-const isRouteMatched = (pathname: string, routes: string[]) => routes.includes(pathname);\r\n-\r\n // Custom handler to manage public and ignored routes\r\n const handler = (req: NextRequest, event: NextFetchEvent) => {\r\n   const { pathname } = req.nextUrl;\r\n \r\n   // Check if the route is public or ignored\r\n-  if (isRouteMatched(pathname, publicRoutes) || isRouteMatched(pathname, ignoredRoutes)) {\r\n+  if (publicRoutes.includes(pathname) || ignoredRoutes.includes(pathname)) {\r\n     return NextResponse.next();\r\n   }\r\n \r\n   // Apply Clerk middleware for protected routes\r\n@@ -40,4 +36,9 @@\n export const config = {\r\n   // The following matcher runs middleware on all routes except static assets.\r\n   matcher: ['/((?!.*\\\\..*|_next).*)', '/', '/(api|trpc)(.*)'],\r\n };\r\n+// https://www.googleapis.com/auth/userinfo.email\r\n+// https://www.googleapis.com/auth/userinfo.profile\r\n+// https://www.googleapis.com/auth/drive.activity.readonly\r\n+// https://www.googleapis.com/auth/drive.metadata\r\n+// https://www.googleapis.com/auth/drive.readonly\n\\ No newline at end of file\n"
                },
                {
                    "date": 1721042930667,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,42 +1,49 @@\n-import { NextResponse } from 'next/server';\r\n-import type { NextRequest } from 'next/server';\r\n-import type { NextFetchEvent } from 'next/server';\r\n+import { NextRequest, NextResponse } from 'next/server';\r\n import { clerkMiddleware } from '@clerk/nextjs/server';\r\n \r\n-// Define public and ignored routes\r\n const publicRoutes = [\r\n   '/',\r\n   '/api/clerk-webhook',\r\n   '/api/drive-activity/notification',\r\n   '/api/payment/success',\r\n ];\r\n+\r\n const ignoredRoutes = [\r\n   '/api/auth/callback/discord',\r\n   '/api/auth/callback/notion',\r\n   '/api/auth/callback/slack',\r\n   '/api/flow',\r\n   '/api/cron/wait',\r\n ];\r\n \r\n-// Custom handler to manage public and ignored routes\r\n-const handler = (req: NextRequest, event: NextFetchEvent) => {\r\n+function isPublicRoute(pathname: string) {\r\n+  return publicRoutes.includes(pathname);\r\n+}\r\n+\r\n+function isIgnoredRoute(pathname: string) {\r\n+  return ignoredRoutes.includes(pathname);\r\n+}\r\n+\r\n+export default function middleware(req: NextRequest, event: any) {\r\n   const { pathname } = req.nextUrl;\r\n \r\n-  // Check if the route is public or ignored\r\n-  if (publicRoutes.includes(pathname) || ignoredRoutes.includes(pathname)) {\r\n+  // If the route is public, proceed without Clerk\r\n+  if (isPublicRoute(pathname)) {\r\n     return NextResponse.next();\r\n   }\r\n \r\n-  // Apply Clerk middleware for protected routes\r\n+  // If the route is ignored, proceed without Clerk\r\n+  if (isIgnoredRoute(pathname)) {\r\n+    return NextResponse.next();\r\n+  }\r\n+\r\n+  // Apply Clerk middleware for all other routes\r\n   return clerkMiddleware()(req, event);\r\n-};\r\n+}\r\n \r\n-export default handler;\r\n-\r\n export const config = {\r\n-  // The following matcher runs middleware on all routes except static assets.\r\n-  matcher: ['/((?!.*\\\\..*|_next).*)', '/', '/(api|trpc)(.*)'],\r\n+  matcher: ['/((?!.+\\\\.[\\\\w]+$|_next).*)', '/', '/(api|trpc)(.*)'],\r\n };\r\n // https://www.googleapis.com/auth/userinfo.email\r\n // https://www.googleapis.com/auth/userinfo.profile\r\n // https://www.googleapis.com/auth/drive.activity.readonly\r\n"
                }
            ],
            "date": 1718557919245,
            "name": "Commit-0",
            "content": "import { NextResponse } from 'next/server';\r\nimport type { NextRequest } from 'next/server';\r\nimport type { NextFetchEvent } from 'next/server';\r\nimport { clerkMiddleware } from '@clerk/nextjs/server';\r\n\r\n// Define public and ignored routes\r\nconst publicRoutes = [\r\n  '/',\r\n  '/api/clerk-webhook',\r\n  '/api/drive-activity/notification',\r\n  '/api/payment/success',\r\n];\r\n\r\nconst ignoredRoutes = [\r\n  '/api/auth/callback/discord',\r\n  '/api/auth/callback/notion',\r\n  '/api/auth/callback/slack',\r\n  '/api/flow',\r\n  '/api/cron/wait',\r\n];\r\n\r\n// Custom handler to manage public and ignored routes\r\nconst handler = (req: NextRequest, event: NextFetchEvent) => {\r\n  const { pathname } = req.nextUrl;\r\n\r\n  // Check if the route is public or ignored\r\n  if (publicRoutes.includes(pathname) || ignoredRoutes.includes(pathname)) {\r\n    return NextResponse.next();\r\n  }\r\n\r\n  // Apply Clerk middleware for protected routes\r\n  return clerkMiddleware()(req, event);\r\n};\r\n\r\nexport default handler;\r\n\r\nexport const config = {\r\n  // The following matcher runs middleware on all routes except static assets.\r\n  matcher: ['/((?!.*\\\\..*|_next).*)', '/', '/(api|trpc)(.*)'],\r\n};\r\n"
        }
    ]
}