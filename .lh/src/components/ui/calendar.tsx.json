{
    "sourceFile": "src/components/ui/calendar.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1727522321247,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1727529749526,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,14 @@\n \"use client\"\n \n import * as React from \"react\"\n import { ChevronLeft, ChevronRight } from \"lucide-react\"\n-import { DayPicker } from \"react-day-picker\"\n+import { DayPicker, useDayPicker, useNavigation } from \"react-day-picker\"\n \n import { cn } from \"@/lib/utils\"\n import { buttonVariants } from \"@/components/ui/button\"\n+import { format, setMonth, setYear } from \"date-fns\"\n+import { Select, SelectContent, SelectItem, SelectTrigger } from \"@/components/ui/select\"\n \n export type CalendarProps = React.ComponentProps<typeof DayPicker>\n \n function Calendar({\n@@ -53,11 +55,72 @@\n         day_hidden: \"invisible\",\n         ...classNames,\n       }}\n       components={{\n-        IconLeft: ({ ...props }) => <ChevronLeft className=\"h-4 w-4\" />,\n-        IconRight: ({ ...props }) => <ChevronRight className=\"h-4 w-4\" />,\n-        Dropdown:()=> <div>custom dropdown</div>\n+        IconLeft: () => <ChevronLeft className=\"h-4 w-4\" />,\n+        IconRight: () => <ChevronRight className=\"h-4 w-4\" />,\n+        Dropdown: ({ value, onChange, children, ...props }) => {\n+          const { fromDate, fromMonth, fromYear, toDate, toMonth, toYear } = useDayPicker();\n+          const { goToMonth, currentMonth } = useNavigation();\n+\n+          if (props.name === \"months\") {\n+            const selectedItems = Array.from({ length: 12 }, (_, i) => ({\n+              value: i.toString(),\n+              label: format(setMonth(new Date(), i), \"MMM\")\n+            }));\n+            return (\n+              <Select\n+                onValueChange={(newValue) => {\n+                  const newDate = setMonth(currentMonth, parseInt(newValue));\n+                  goToMonth(newDate);\n+                }}\n+                value={currentMonth.getMonth().toString()}\n+              >\n+                <SelectTrigger>\n+                  {format(currentMonth, \"MMM\")}\n+                </SelectTrigger>\n+                <SelectContent>\n+                  {selectedItems.map((selectItem) => (\n+                    <SelectItem key={selectItem.value} value={selectItem.value}>\n+                      {selectItem.label}\n+                    </SelectItem>\n+                  ))}\n+                </SelectContent>\n+              </Select>\n+            );\n+          } else if (props.name === \"years\") {\n+            const earliestYear = fromYear || fromMonth?.getFullYear() || fromDate?.getFullYear() || currentMonth.getFullYear() - 10;\n+            const latestYear = toYear || toMonth?.getFullYear() || toDate?.getFullYear() || currentMonth.getFullYear() + 10;\n+            const selectItems = Array.from(\n+              { length: latestYear - earliestYear + 1 },\n+              (_, i) => ({\n+                label: (earliestYear + i).toString(),\n+                value: (earliestYear + i).toString(),\n+              })\n+            );\n+            return (\n+              <Select\n+                onValueChange={(newValue) => {\n+                  const newDate = setYear(currentMonth, parseInt(newValue));\n+                  goToMonth(newDate);\n+                }}\n+                value={currentMonth.getFullYear().toString()}\n+              >\n+                <SelectTrigger>\n+                  {currentMonth.getFullYear()}\n+                </SelectTrigger>\n+                <SelectContent>\n+                  {selectItems.map((selectItem) => (\n+                    <SelectItem key={selectItem.value} value={selectItem.value}>\n+                      {selectItem.label}\n+                    </SelectItem>\n+                  ))}\n+                </SelectContent>\n+              </Select>\n+            );\n+          }\n+          return null;\n+        },\n       }}\n       {...props}\n     />\n   )\n"
                },
                {
                    "date": 1727615631474,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,118 @@\n+\"use client\"\n+\n+import * as React from \"react\"\n+import { ChevronLeft, ChevronRight } from \"lucide-react\"\n+import { DayPicker, useDayPicker, useNavigation } from \"react-day-picker\"\n+\n+import { cn } from \"@/lib/utils\"\n+import { buttonVariants } from \"@/components/ui/button\"\n+import { format, setMonth, setYear } from \"date-fns\"\n+import { Select, SelectContent, SelectItem, SelectTrigger } from \"@/components/ui/select\"\n+\n+export type CalendarProps = React.ComponentProps<typeof DayPicker>;\n+\n+function Calendar({ className, classNames, showOutsideDays = true, ...props }: CalendarProps) {\n+  return (\n+    <DayPicker\n+      showOutsideDays={showOutsideDays}\n+      className={cn(\"p-3\", className)}\n+      classNames={{\n+        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n+        month: \"space-y-4\",\n+        caption: \"flex justify-center pt-1 relative items-center\",\n+        caption_label: \"text-sm font-medium\",\n+        nav: \"space-x-1 flex items-center\",\n+        nav_button: cn(\n+          buttonVariants({ variant: \"outline\" }),\n+          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n+        ),\n+        nav_button_previous: \"absolute left-1\",\n+        nav_button_next: \"absolute right-1\",\n+        table: \"w-full border-collapse space-y-1\",\n+        head_row: \"flex\",\n+        head_cell: \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n+        row: \"flex w-full mt-2\",\n+        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n+        day: cn(\n+          buttonVariants({ variant: \"ghost\" }),\n+          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n+        ),\n+        day_range_end: \"day-range-end\",\n+        day_selected:\n+          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n+        day_today: \"bg-accent text-accent-foreground\",\n+        day_outside: \"day-outside text-muted-foreground opacity-50 aria-selected:bg-accent/50 aria-selected:text-muted-foreground aria-selected:opacity-30\",\n+        day_disabled: \"text-muted-foreground opacity-50\",\n+        day_range_middle: \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n+        day_hidden: \"invisible\",\n+        ...classNames,\n+      }}\n+      components={{\n+        IconLeft: () => <ChevronLeft className=\"h-4 w-4\" />,\n+        IconRight: () => <ChevronRight className=\"h-4 w-4\" />,\n+        Dropdown: ({ value, onChange, children, ...props }) => {\n+          const { fromDate, fromMonth, fromYear, toDate, toMonth, toYear } = useDayPicker();\n+          const { goToMonth, currentMonth } = useNavigation();\n+\n+          if (props.name === \"months\") {\n+            const selectedItems = Array.from({ length: 12 }, (_, i) => ({\n+              value: i.toString(),\n+              label: format(setMonth(new Date(), i), \"MMM\"),\n+            }));\n+            return (\n+              <Select\n+                onValueChange={(newValue) => {\n+                  const newDate = setMonth(currentMonth, parseInt(newValue));\n+                  goToMonth(newDate);\n+                }}\n+                value={currentMonth.getMonth().toString()}\n+              >\n+                <SelectTrigger>{format(currentMonth, \"MMM\")}</SelectTrigger>\n+                <SelectContent>\n+                  {selectedItems.map((selectItem) => (\n+                    <SelectItem key={selectItem.value} value={selectItem.value}>\n+                      {selectItem.label}\n+                    </SelectItem>\n+                  ))}\n+                </SelectContent>\n+              </Select>\n+            );\n+          } else if (props.name === \"years\") {\n+            const earliestYear =\n+              fromYear || fromMonth?.getFullYear() || fromDate?.getFullYear() || currentMonth.getFullYear() - 10;\n+            const latestYear =\n+              toYear || toMonth?.getFullYear() || toDate?.getFullYear() || currentMonth.getFullYear() + 10;\n+            const selectItems = Array.from({ length: latestYear - earliestYear + 1 }, (_, i) => ({\n+              label: (earliestYear + i).toString(),\n+              value: (earliestYear + i).toString(),\n+            }));\n+            return (\n+              <Select\n+                onValueChange={(newValue) => {\n+                  const newDate = setYear(currentMonth, parseInt(newValue));\n+                  goToMonth(newDate);\n+                }}\n+                value={currentMonth.getFullYear().toString()}\n+              >\n+                <SelectTrigger>{currentMonth.getFullYear()}</SelectTrigger>\n+                <SelectContent>\n+                  {selectItems.map((selectItem) => (\n+                    <SelectItem key={selectItem.value} value={selectItem.value}>\n+                      {selectItem.label}\n+                    </SelectItem>\n+                  ))}\n+                </SelectContent>\n+              </Select>\n+            );\n+          }\n+          return null;\n+        },\n+      }}\n+      {...props}\n+    />\n+  );\n+}\n+\n+Calendar.displayName = \"Calendar\";\n+\n+export { Calendar };\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727615783234,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,126 +8,8 @@\n import { buttonVariants } from \"@/components/ui/button\"\n import { format, setMonth, setYear } from \"date-fns\"\n import { Select, SelectContent, SelectItem, SelectTrigger } from \"@/components/ui/select\"\n \n-export type CalendarProps = React.ComponentProps<typeof DayPicker>;\n-\n-function Calendar({ className, classNames, showOutsideDays = true, ...props }: CalendarProps) {\n-  return (\n-    <DayPicker\n-      showOutsideDays={showOutsideDays}\n-      className={cn(\"p-3\", className)}\n-      classNames={{\n-        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n-        month: \"space-y-4\",\n-        caption: \"flex justify-center pt-1 relative items-center\",\n-        caption_label: \"text-sm font-medium\",\n-        nav: \"space-x-1 flex items-center\",\n-        nav_button: cn(\n-          buttonVariants({ variant: \"outline\" }),\n-          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n-        ),\n-        nav_button_previous: \"absolute left-1\",\n-        nav_button_next: \"absolute right-1\",\n-        table: \"w-full border-collapse space-y-1\",\n-        head_row: \"flex\",\n-        head_cell: \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n-        row: \"flex w-full mt-2\",\n-        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n-        day: cn(\n-          buttonVariants({ variant: \"ghost\" }),\n-          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n-        ),\n-        day_range_end: \"day-range-end\",\n-        day_selected:\n-          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n-        day_today: \"bg-accent text-accent-foreground\",\n-        day_outside: \"day-outside text-muted-foreground opacity-50 aria-selected:bg-accent/50 aria-selected:text-muted-foreground aria-selected:opacity-30\",\n-        day_disabled: \"text-muted-foreground opacity-50\",\n-        day_range_middle: \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n-        day_hidden: \"invisible\",\n-        ...classNames,\n-      }}\n-      components={{\n-        IconLeft: () => <ChevronLeft className=\"h-4 w-4\" />,\n-        IconRight: () => <ChevronRight className=\"h-4 w-4\" />,\n-        Dropdown: ({ value, onChange, children, ...props }) => {\n-          const { fromDate, fromMonth, fromYear, toDate, toMonth, toYear } = useDayPicker();\n-          const { goToMonth, currentMonth } = useNavigation();\n-\n-          if (props.name === \"months\") {\n-            const selectedItems = Array.from({ length: 12 }, (_, i) => ({\n-              value: i.toString(),\n-              label: format(setMonth(new Date(), i), \"MMM\"),\n-            }));\n-            return (\n-              <Select\n-                onValueChange={(newValue) => {\n-                  const newDate = setMonth(currentMonth, parseInt(newValue));\n-                  goToMonth(newDate);\n-                }}\n-                value={currentMonth.getMonth().toString()}\n-              >\n-                <SelectTrigger>{format(currentMonth, \"MMM\")}</SelectTrigger>\n-                <SelectContent>\n-                  {selectedItems.map((selectItem) => (\n-                    <SelectItem key={selectItem.value} value={selectItem.value}>\n-                      {selectItem.label}\n-                    </SelectItem>\n-                  ))}\n-                </SelectContent>\n-              </Select>\n-            );\n-          } else if (props.name === \"years\") {\n-            const earliestYear =\n-              fromYear || fromMonth?.getFullYear() || fromDate?.getFullYear() || currentMonth.getFullYear() - 10;\n-            const latestYear =\n-              toYear || toMonth?.getFullYear() || toDate?.getFullYear() || currentMonth.getFullYear() + 10;\n-            const selectItems = Array.from({ length: latestYear - earliestYear + 1 }, (_, i) => ({\n-              label: (earliestYear + i).toString(),\n-              value: (earliestYear + i).toString(),\n-            }));\n-            return (\n-              <Select\n-                onValueChange={(newValue) => {\n-                  const newDate = setYear(currentMonth, parseInt(newValue));\n-                  goToMonth(newDate);\n-                }}\n-                value={currentMonth.getFullYear().toString()}\n-              >\n-                <SelectTrigger>{currentMonth.getFullYear()}</SelectTrigger>\n-                <SelectContent>\n-                  {selectItems.map((selectItem) => (\n-                    <SelectItem key={selectItem.value} value={selectItem.value}>\n-                      {selectItem.label}\n-                    </SelectItem>\n-                  ))}\n-                </SelectContent>\n-              </Select>\n-            );\n-          }\n-          return null;\n-        },\n-      }}\n-      {...props}\n-    />\n-  );\n-}\n-\n-Calendar.displayName = \"Calendar\";\n-\n-export { Calendar };\n-\"use client\"\n-\n-import * as React from \"react\"\n-import { ChevronLeft, ChevronRight } from \"lucide-react\"\n-import { DayPicker, useDayPicker, useNavigation } from \"react-day-picker\"\n-\n-import { cn } from \"@/lib/utils\"\n-import { buttonVariants } from \"@/components/ui/button\"\n-import { format, setMonth, setYear } from \"date-fns\"\n-import { Select, SelectContent, SelectItem, SelectTrigger } from \"@/components/ui/select\"\n-\n export type CalendarProps = React.ComponentProps<typeof DayPicker>\n \n function Calendar({\n   className,\n@@ -244,5 +126,5 @@\n   )\n }\n Calendar.displayName = \"Calendar\"\n \n-export { Calendar }\n\\ No newline at end of file\n+export { Calendar }\n"
                },
                {
                    "date": 1727626680202,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n     <DayPicker\n       showOutsideDays={showOutsideDays}\n       className={cn(\"p-3\", className)}\n       classNames={{\n-        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n+        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0 bg-[#C8C7FF]\", // Background for the months\n         month: \"space-y-4\",\n         caption: \"flex justify-center pt-1 relative items-center\",\n         caption_label: \"text-sm font-medium\",\n         nav: \"space-x-1 flex items-center\",\n@@ -32,27 +32,27 @@\n           \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n         ),\n         nav_button_previous: \"absolute left-1\",\n         nav_button_next: \"absolute right-1\",\n-        table: \"w-full border-collapse space-y-1\",\n+        table: \"w-full border-collapse space-y-1 bg-[#C8C7FF]\", // Background for the table\n         head_row: \"flex\",\n         head_cell:\n-          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n+          \"text-black rounded-md w-9 font-normal text-[0.8rem]\", // Ensure the header text is black\n         row: \"flex w-full mt-2\",\n-        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n+        cell: \"h-9 w-9 text-center text-black text-sm p-0 relative bg-[#C8C7FF]\", // Background for the cells and black text\n         day: cn(\n           buttonVariants({ variant: \"ghost\" }),\n-          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n+          \"h-9 w-9 p-0 font-normal text-black aria-selected:opacity-100\" // Black text for days\n         ),\n         day_range_end: \"day-range-end\",\n         day_selected:\n-          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n-        day_today: \"bg-accent text-accent-foreground\",\n+          \"bg-primary text-black hover:bg-primary hover:text-black focus:bg-primary focus:text-black\", // Ensure the selected day has black text\n+        day_today: \"bg-accent text-black\", // Today's date with black text\n         day_outside:\n-          \"day-outside text-muted-foreground opacity-50 aria-selected:bg-accent/50 aria-selected:text-muted-foreground aria-selected:opacity-30\",\n-        day_disabled: \"text-muted-foreground opacity-50\",\n+          \"day-outside text-black opacity-50 aria-selected:bg-accent/50 aria-selected:text-black aria-selected:opacity-30\", // Outside days with black text\n+        day_disabled: \"text-black opacity-50\", // Disabled days with black text\n         day_range_middle:\n-          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n+          \"aria-selected:bg-accent aria-selected:text-black\", // Range middle day with black text\n         day_hidden: \"invisible\",\n         ...classNames,\n       }}\n       components={{\n@@ -122,9 +122,10 @@\n         },\n       }}\n       {...props}\n     />\n-  )\n+  );\n }\n+\n Calendar.displayName = \"Calendar\"\n \n export { Calendar }\n"
                },
                {
                    "date": 1727627044864,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,9 @@\n         ),\n         day_range_end: \"day-range-end\",\n         day_selected:\n           \"bg-primary text-black hover:bg-primary hover:text-black focus:bg-primary focus:text-black\", // Ensure the selected day has black text\n-        day_today: \"bg-accent text-black\", // Today's date with black text\n+        day_today: \"bg-accent text-white\", // Today's date with black text\n         day_outside:\n           \"day-outside text-black opacity-50 aria-selected:bg-accent/50 aria-selected:text-black aria-selected:opacity-30\", // Outside days with black text\n         day_disabled: \"text-black opacity-50\", // Disabled days with black text\n         day_range_middle:\n"
                },
                {
                    "date": 1727627940711,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,9 @@\n                   goToMonth(newDate);\n                 }}\n                 value={currentMonth.getMonth().toString()}\n               >\n-                <SelectTrigger>\n+                <SelectTrigger className=\"bg-[#7540A9] text-white\">\n                   {format(currentMonth, \"MMM\")}\n                 </SelectTrigger>\n                 <SelectContent>\n                   {selectedItems.map((selectItem) => (\n@@ -104,9 +104,9 @@\n                   goToMonth(newDate);\n                 }}\n                 value={currentMonth.getFullYear().toString()}\n               >\n-                <SelectTrigger>\n+                <SelectTrigger className=\"bg-[#7540A9] text-white\">\n                   {currentMonth.getFullYear()}\n                 </SelectTrigger>\n                 <SelectContent>\n                   {selectItems.map((selectItem) => (\n"
                },
                {
                    "date": 1727872381363,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,29 +1,37 @@\n-\"use client\"\n+import * as React from \"react\";\n+import { ChevronLeft, ChevronRight } from \"lucide-react\";\n+import { DayPicker } from \"react-day-picker\";\n+import { cn } from \"@/lib/utils\";\n+import { buttonVariants } from \"@/components/ui/button\";\n+import { format, setMonth, setYear } from \"date-fns\";\n \n-import * as React from \"react\"\n-import { ChevronLeft, ChevronRight } from \"lucide-react\"\n-import { DayPicker, useDayPicker, useNavigation } from \"react-day-picker\"\n+export type CalendarProps = React.ComponentProps<typeof DayPicker>;\n \n-import { cn } from \"@/lib/utils\"\n-import { buttonVariants } from \"@/components/ui/button\"\n-import { format, setMonth, setYear } from \"date-fns\"\n-import { Select, SelectContent, SelectItem, SelectTrigger } from \"@/components/ui/select\"\n-\n-export type CalendarProps = React.ComponentProps<typeof DayPicker>\n-\n function Calendar({\n   className,\n   classNames,\n   showOutsideDays = true,\n   ...props\n }: CalendarProps) {\n+  const [month, setMonthState] = React.useState<Date>(new Date());\n+\n+  const handleMonthChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n+    const newMonth = parseInt(event.target.value, 10);\n+    setMonthState(prevMonth => setMonth(prevMonth, newMonth));\n+  };\n+\n+  const handleYearChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n+    const newYear = parseInt(event.target.value, 10);\n+    setMonthState(prevMonth => setYear(prevMonth, newYear));\n+  };\n+\n   return (\n     <DayPicker\n       showOutsideDays={showOutsideDays}\n       className={cn(\"p-3\", className)}\n       classNames={{\n-        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0 bg-[#C8C7FF]\", // Background for the months\n+        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0 bg-[#C8C7FF]\",\n         month: \"space-y-4\",\n         caption: \"flex justify-center pt-1 relative items-center\",\n         caption_label: \"text-sm font-medium\",\n         nav: \"space-x-1 flex items-center\",\n@@ -32,100 +40,61 @@\n           \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n         ),\n         nav_button_previous: \"absolute left-1\",\n         nav_button_next: \"absolute right-1\",\n-        table: \"w-full border-collapse space-y-1 bg-[#C8C7FF]\", // Background for the table\n+        table: \"w-full border-collapse space-y-1 bg-[#C8C7FF]\",\n         head_row: \"flex\",\n-        head_cell:\n-          \"text-black rounded-md w-9 font-normal text-[0.8rem]\", // Ensure the header text is black\n+        head_cell: \"text-black rounded-md w-9 font-normal text-[0.8rem]\",\n         row: \"flex w-full mt-2\",\n-        cell: \"h-9 w-9 text-center text-black text-sm p-0 relative bg-[#C8C7FF]\", // Background for the cells and black text\n+        cell: \"h-9 w-9 text-center text-black text-sm p-0 relative bg-[#C8C7FF]\",\n         day: cn(\n           buttonVariants({ variant: \"ghost\" }),\n-          \"h-9 w-9 p-0 font-normal text-black aria-selected:opacity-100\" // Black text for days\n+          \"h-9 w-9 p-0 font-normal text-black aria-selected:opacity-100\"\n         ),\n-        day_range_end: \"day-range-end\",\n-        day_selected:\n-          \"bg-primary text-black hover:bg-primary hover:text-black focus:bg-primary focus:text-black\", // Ensure the selected day has black text\n-        day_today: \"bg-accent text-white\", // Today's date with black text\n-        day_outside:\n-          \"day-outside text-black opacity-50 aria-selected:bg-accent/50 aria-selected:text-black aria-selected:opacity-30\", // Outside days with black text\n-        day_disabled: \"text-black opacity-50\", // Disabled days with black text\n-        day_range_middle:\n-          \"aria-selected:bg-accent aria-selected:text-black\", // Range middle day with black text\n+        day_selected: \"bg-primary text-black hover:bg-primary hover:text-black focus:bg-primary focus:text-black\",\n+        day_today: \"bg-accent text-white\",\n+        day_outside: \"day-outside text-black opacity-50 aria-selected:bg-accent/50 aria-selected:text-black aria-selected:opacity-30\",\n+        day_disabled: \"text-black opacity-50\",\n+        day_range_middle: \"aria-selected:bg-accent aria-selected:text-black\",\n         day_hidden: \"invisible\",\n         ...classNames,\n       }}\n       components={{\n         IconLeft: () => <ChevronLeft className=\"h-4 w-4\" />,\n         IconRight: () => <ChevronRight className=\"h-4 w-4\" />,\n-        Dropdown: ({ value, onChange, children, ...props }) => {\n-          const { fromDate, fromMonth, fromYear, toDate, toMonth, toYear } = useDayPicker();\n-          const { goToMonth, currentMonth } = useNavigation();\n-\n-          if (props.name === \"months\") {\n-            const selectedItems = Array.from({ length: 12 }, (_, i) => ({\n-              value: i.toString(),\n-              label: format(setMonth(new Date(), i), \"MMM\")\n-            }));\n-            return (\n-              <Select\n-                onValueChange={(newValue) => {\n-                  const newDate = setMonth(currentMonth, parseInt(newValue));\n-                  goToMonth(newDate);\n-                }}\n-                value={currentMonth.getMonth().toString()}\n-              >\n-                <SelectTrigger className=\"bg-[#7540A9] text-white\">\n-                  {format(currentMonth, \"MMM\")}\n-                </SelectTrigger>\n-                <SelectContent>\n-                  {selectedItems.map((selectItem) => (\n-                    <SelectItem key={selectItem.value} value={selectItem.value}>\n-                      {selectItem.label}\n-                    </SelectItem>\n-                  ))}\n-                </SelectContent>\n-              </Select>\n-            );\n-          } else if (props.name === \"years\") {\n-            const earliestYear = fromYear || fromMonth?.getFullYear() || fromDate?.getFullYear() || currentMonth.getFullYear() - 10;\n-            const latestYear = toYear || toMonth?.getFullYear() || toDate?.getFullYear() || currentMonth.getFullYear() + 10;\n-            const selectItems = Array.from(\n-              { length: latestYear - earliestYear + 1 },\n-              (_, i) => ({\n-                label: (earliestYear + i).toString(),\n-                value: (earliestYear + i).toString(),\n-              })\n-            );\n-            return (\n-              <Select\n-                onValueChange={(newValue) => {\n-                  const newDate = setYear(currentMonth, parseInt(newValue));\n-                  goToMonth(newDate);\n-                }}\n-                value={currentMonth.getFullYear().toString()}\n-              >\n-                <SelectTrigger className=\"bg-[#7540A9] text-white\">\n-                  {currentMonth.getFullYear()}\n-                </SelectTrigger>\n-                <SelectContent>\n-                  {selectItems.map((selectItem) => (\n-                    <SelectItem key={selectItem.value} value={selectItem.value}>\n-                      {selectItem.label}\n-                    </SelectItem>\n-                  ))}\n-                </SelectContent>\n-              </Select>\n-            );\n-          }\n-          return null;\n-        },\n+        Caption: ({ displayMonth }) => (\n+          <div className=\"flex justify-center space-x-2\">\n+            <select\n+              value={displayMonth.getMonth()}\n+              onChange={handleMonthChange}\n+              className=\"bg-[#7540A9] text-white p-1 rounded\"\n+            >\n+              {Array.from({ length: 12 }, (_, i) => (\n+                <option key={i} value={i}>\n+                  {format(setMonth(new Date(), i), \"MMM\")}\n+                </option>\n+              ))}\n+            </select>\n+            <select\n+              value={displayMonth.getFullYear()}\n+              onChange={handleYearChange}\n+              className=\"bg-[#7540A9] text-white p-1 rounded\"\n+            >\n+              {Array.from({ length: 4 }, (_, i) => (\n+                <option key={i} value={2023 + i}>\n+                  {2023 + i}\n+                </option>\n+              ))}\n+            </select>\n+          </div>\n+        )\n       }}\n+      month={month}\n+      onMonthChange={setMonthState}\n       {...props}\n     />\n   );\n }\n \n-Calendar.displayName = \"Calendar\"\n+Calendar.displayName = \"Calendar\";\n \n-export { Calendar }\n+export { Calendar };\n"
                }
            ],
            "date": 1727522321247,
            "name": "Commit-0",
            "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground opacity-50 aria-selected:bg-accent/50 aria-selected:text-muted-foreground aria-selected:opacity-30\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ ...props }) => <ChevronLeft className=\"h-4 w-4\" />,\n        IconRight: ({ ...props }) => <ChevronRight className=\"h-4 w-4\" />,\n        Dropdown:()=> <div>custom dropdown</div>\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n"
        }
    ]
}