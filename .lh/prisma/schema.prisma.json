{
    "sourceFile": "prisma/schema.prisma",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 8,
            "patches": [
                {
                    "date": 1716732651144,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1716733019266,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,12 +11,15 @@\n datasource db {\n   provider = \"postgresql\"\n   url      = env(\"DATABASE_URL\")\n }\n-generator client {\n-  provider = \"prisma-client-js\"\n-}\n+model User {\n+  id Int @id @default(autoincrement())\n \n-datasource db {\n-  provider = \"postgresql\"\n-  url      = env(\"DATABASE_URL\")\n+  clerkId      String  @unique\n+  name         String?\n+  email        String  @unique\n+  profileImage String?\n+  createdAt        DateTime @default(now())\n+  updatedAt        DateTime @updatedAt\n+\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727413201083,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,5 +21,6 @@\n   profileImage String?\n   createdAt        DateTime @default(now())\n   updatedAt        DateTime @updatedAt\n \n-}\n\\ No newline at end of file\n+}\n+\n"
                },
                {
                    "date": 1737275599856,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,15 +12,69 @@\n   provider = \"postgresql\"\n   url      = env(\"DATABASE_URL\")\n }\n model User {\n-  id Int @id @default(autoincrement())\n-\n-  clerkId      String  @unique\n-  name         String?\n-  email        String  @unique\n+  id          String    @id @default(uuid())\n+  clerkId     String    @unique\n+  name        String?\n+  email       String    @unique\n   profileImage String?\n-  createdAt        DateTime @default(now())\n-  updatedAt        DateTime @updatedAt\n+  createdAt   DateTime  @default(now())\n+  updatedAt   DateTime  @updatedAt\n+  boards      Board[]\n+}\n+model Board {\n+  id         Int       @id @default(autoincrement())\n+  uuid       String    @unique @db.Char(36)\n+  created_at DateTime? @default(now()) @db.Timestamp(0)\n+  updated_at DateTime? @default(now()) @db.Timestamp(0)\n+  name       String    @db.VarChar(255)\n+  userId     String\n+  columns    Column[]  @relation(\"BoardColumn\")\n+  user       User      @relation(fields: [userId], references: [id])\n \n+  @@index([userId])\n }\n+model Column {\n+  id         Int       @id @default(autoincrement())\n+  uuid       String    @unique @db.Char(36)\n+  created_at DateTime? @default(now()) @db.Timestamp(0)\n+  updated_at DateTime? @default(now()) @db.Timestamp(0)\n+  name       String    @db.VarChar(255)\n+  board_uuid String\n+  position   Int\n+  color      String    @db.VarChar(255)\n+  userId     String\n+  board      Board     @relation(\"BoardColumn\", fields: [board_uuid], references: [uuid], onDelete: Cascade)\n+  tasks      Task[]    @relation(\"ColumnTask\")\n \n+  @@index([board_uuid])\n+}\n+model Task {\n+  id          Int       @id @default(autoincrement())\n+  uuid        String    @unique @db.Char(36)\n+  created_at  DateTime? @default(now()) @db.Timestamp(0)\n+  updated_at  DateTime? @default(now()) @db.Timestamp(0)\n+  name        String    @db.VarChar(255)\n+  description String?   @db.VarChar(1023)\n+  position    Int\n+  column_uuid String\n+  userId      String\n+  column      Column    @relation(\"ColumnTask\", fields: [column_uuid], references: [uuid], onDelete: Cascade)\n+  subtasks    Subtask[] @relation(\"TaskSubtask\")\n+\n+  @@index([column_uuid])\n+}\n+model Subtask {\n+  id         Int       @id @default(autoincrement())\n+  uuid       String    @unique @db.Char(36)\n+  created_at DateTime? @default(now()) @db.Timestamp(0)\n+  updated_at DateTime? @default(now()) @db.Timestamp(0)\n+  name       String    @db.VarChar(255)\n+  task_uuid  String\n+  completed  Boolean   @default(false)\n+  userId     String\n+  task       Task      @relation(\"TaskSubtask\", fields: [task_uuid], references: [uuid], onDelete: Cascade)\n+\n+  @@index([task_uuid])\n+}\n+\n"
                },
                {
                    "date": 1737382709697,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n   name       String    @db.VarChar(255)\n   board_uuid String\n   position   Int\n   color      String    @db.VarChar(255)\n-  userId     String\n+  userId     String?\n   board      Board     @relation(\"BoardColumn\", fields: [board_uuid], references: [uuid], onDelete: Cascade)\n   tasks      Task[]    @relation(\"ColumnTask\")\n \n   @@index([board_uuid])\n"
                },
                {
                    "date": 1737383012740,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n   updated_at DateTime? @default(now()) @db.Timestamp(0)\n   name       String    @db.VarChar(255)\n   userId     String\n   columns    Column[]  @relation(\"BoardColumn\")\n-  user       User      @relation(fields: [userId], references: [id])\n+  user       User?      @relation(fields: [userId], references: [id])\n \n   @@index([userId])\n }\n model Column {\n"
                },
                {
                    "date": 1740239937938,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,186 @@\n+// This is your Prisma schema file,\n+// learn more about it in the docs: https://pris.ly/d/prisma-schema\n+\n+// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n+// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n+\n+generator client {\n+  provider = \"prisma-client-js\"\n+}\n+\n+datasource db {\n+  provider = \"postgresql\"\n+  url      = env(\"DATABASE_URL\")\n+}\n+model User {\n+  id          String    @id @default(uuid())\n+  clerkId     String    @unique\n+  name        String?\n+  email       String    @unique\n+  profileImage String?\n+  createdAt   DateTime  @default(now())\n+  updatedAt   DateTime  @updatedAt\n+  boards      Board[]\n+  workflows       Workflow[]\n+  localGoogleId   String?               @unique\n+  googleResourceId String?              @unique\n+  credentials     LocalGoogleCredential?\n+  discordWebhooks DiscordWebhook[]\n+  notionAccounts  Notion[]\n+  slackAccounts   Slack[]\n+  connections     Connection[]\n+}\n+model Board {\n+  id         Int       @id @default(autoincrement())\n+  uuid       String    @unique @db.Char(36)\n+  created_at DateTime? @default(now()) @db.Timestamp(0)\n+  updated_at DateTime? @default(now()) @db.Timestamp(0)\n+  name       String    @db.VarChar(255)\n+  userId     String\n+  columns    Column[]  @relation(\"BoardColumn\")\n+  user       User?      @relation(fields: [userId], references: [id])\n+\n+ workflow   Workflow? @relation(\"BoardWorkflow\", fields: [workflowId], references: [id])\n+\n+  workflowId String? @unique // Foreign key for the workflow relatio\n+\n+  @@index([userId])\n+}\n+model Column {\n+  id         Int       @id @default(autoincrement())\n+  uuid       String    @unique @db.Char(36)\n+  created_at DateTime? @default(now()) @db.Timestamp(0)\n+  updated_at DateTime? @default(now()) @db.Timestamp(0)\n+  name       String    @db.VarChar(255)\n+  board_uuid String\n+  position   Int\n+  color      String    @db.VarChar(255)\n+  userId     String?\n+  board      Board     @relation(\"BoardColumn\", fields: [board_uuid], references: [uuid], onDelete: Cascade)\n+  tasks      Task[]    @relation(\"ColumnTask\")\n+\n+  @@index([board_uuid])\n+}\n+model Task {\n+  id          Int       @id @default(autoincrement())\n+  uuid        String    @unique @db.Char(36)\n+  created_at  DateTime? @default(now()) @db.Timestamp(0)\n+  updated_at  DateTime? @default(now()) @db.Timestamp(0)\n+  name        String    @db.VarChar(255)\n+  description String?   @db.VarChar(1023)\n+  position    Int\n+  column_uuid String\n+  userId      String\n+  column      Column    @relation(\"ColumnTask\", fields: [column_uuid], references: [uuid], onDelete: Cascade)\n+  subtasks    Subtask[] @relation(\"TaskSubtask\")\n+\n+  @@index([column_uuid])\n+}\n+model Subtask {\n+  id         Int       @id @default(autoincrement())\n+  uuid       String    @unique @db.Char(36)\n+  created_at DateTime? @default(now()) @db.Timestamp(0)\n+  updated_at DateTime? @default(now()) @db.Timestamp(0)\n+  name       String    @db.VarChar(255)\n+  task_uuid  String\n+  completed  Boolean   @default(false)\n+  userId     String\n+  task       Task      @relation(\"TaskSubtask\", fields: [task_uuid], references: [uuid], onDelete: Cascade)\n+\n+  @@index([task_uuid])\n+}\n+\n+model Workflow {\n+  id                String   @id @default(uuid())\n+  name              String\n+  description       String\n+  nodes             String?\n+  edges             String?\n+  publish           Boolean  @default(false)\n+  discordTemplate   String?\n+  notionTemplate    String?\n+  slackTemplate     String?\n+  slackChannels     String[]\n+  slackAccessToken  String?\n+  notionAccessToken String?\n+  notionDbId        String?\n+  flowPath          String?\n+  cronPath          String?\n+  createdAt         DateTime @default(now())\n+  updatedAt         DateTime @updatedAt\n+  \n+  user   User   @relation(fields: [userId], references: [clerkId])\n+  userId String\n+  \n+  board   Board? @relation(\"BoardWorkflow\")\n+}\n+\n+model LocalGoogleCredential {\n+  id          String @id @default(uuid())\n+  accessToken String @unique\n+\n+  folderId   String?\n+  pageToken  String?\n+  channelId  String  @unique @default(uuid())\n+  subscribed Boolean @default(false)\n+\n+  createdAt DateTime @default(now())\n+  updatedAt DateTime @updatedAt\n+\n+  userId String @unique\n+  user   User   @relation(fields: [userId], references: [clerkId])\n+}\n+\n+model DiscordWebhook {\n+  id          String        @id @default(uuid())\n+  webhookId   String        @unique\n+  url         String        @unique\n+  name        String\n+  guildName   String\n+  guildId     String\n+  channelId   String        @unique\n+  user        User          @relation(fields: [userId], references: [clerkId])\n+  userId      String\n+  connections Connection[]\n+}\n+\n+model Slack {\n+  id String @id @default(uuid())\n+\n+  appId            String\n+  authedUserId     String\n+  authedUserToken  String @unique\n+  slackAccessToken String @unique\n+  botUserId        String\n+  teamId           String\n+  teamName         String\n+\n+  user        User          @relation(fields: [userId], references: [clerkId])\n+  userId      String\n+  connections Connection[]\n+}\n+\n+model Notion {\n+  id            String        @id @default(uuid())\n+  accessToken   String        @unique\n+  workspaceId   String        @unique\n+  databaseId    String        @unique\n+  workspaceName String\n+  workspaceIcon String\n+  user          User          @relation(fields: [userId], references: [clerkId])\n+  userId        String\n+  connections   Connection[]\n+}\n+\n+model Connection {\n+  id               String          @id @default(uuid())\n+  type             String\n+  discordWebhook   DiscordWebhook? @relation(fields: [discordWebhookId], references: [id])\n+  discordWebhookId String?         @unique\n+  notion          Notion?         @relation(fields: [notionId], references: [id])\n+  notionId        String?         @unique\n+  user            User?           @relation(fields: [userId], references: [clerkId])\n+  userId          String?\n+  slack           Slack?          @relation(fields: [slackId], references: [id])\n+  slackId         String?         @unique\n+}\n"
                },
                {
                    "date": 1740297425153,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,42 +11,44 @@\n datasource db {\n   provider = \"postgresql\"\n   url      = env(\"DATABASE_URL\")\n }\n+\n model User {\n-  id          String    @id @default(uuid())\n-  clerkId     String    @unique\n-  name        String?\n-  email       String    @unique\n-  profileImage String?\n-  createdAt   DateTime  @default(now())\n-  updatedAt   DateTime  @updatedAt\n-  boards      Board[]\n-  workflows       Workflow[]\n-  localGoogleId   String?               @unique\n-  googleResourceId String?              @unique\n-  credentials     LocalGoogleCredential?\n-  discordWebhooks DiscordWebhook[]\n-  notionAccounts  Notion[]\n-  slackAccounts   Slack[]\n-  connections     Connection[]\n+  id               String                 @id @default(uuid())\n+  clerkId          String                 @unique\n+  name             String?\n+  email            String                 @unique\n+  profileImage     String?\n+  createdAt        DateTime               @default(now())\n+  updatedAt        DateTime               @updatedAt\n+  boards           Board[]\n+  workflows        Workflow[]\n+  localGoogleId    String?                @unique\n+  googleResourceId String?                @unique\n+  credentials      LocalGoogleCredential?\n+  discordWebhooks  DiscordWebhook[]\n+  notionAccounts   Notion[]\n+  slackAccounts    Slack[]\n+  connections      Connection[]\n }\n+\n model Board {\n   id         Int       @id @default(autoincrement())\n   uuid       String    @unique @db.Char(36)\n   created_at DateTime? @default(now()) @db.Timestamp(0)\n   updated_at DateTime? @default(now()) @db.Timestamp(0)\n   name       String    @db.VarChar(255)\n-  userId     String\n+  clerkId     String\n   columns    Column[]  @relation(\"BoardColumn\")\n-  user       User?      @relation(fields: [userId], references: [id])\n+  user       User?     @relation(fields: [clerkId], references: [clerkId])\n \n- workflow   Workflow? @relation(\"BoardWorkflow\", fields: [workflowId], references: [id])\n+  workflow   Workflow? @relation(\"BoardToWorkflow\")\n+workflowId String?   @unique\n \n-  workflowId String? @unique // Foreign key for the workflow relatio\n+  @@index([clerkId])\n+}\n \n-  @@index([userId])\n-}\n model Column {\n   id         Int       @id @default(autoincrement())\n   uuid       String    @unique @db.Char(36)\n   created_at DateTime? @default(now()) @db.Timestamp(0)\n@@ -54,14 +56,15 @@\n   name       String    @db.VarChar(255)\n   board_uuid String\n   position   Int\n   color      String    @db.VarChar(255)\n-  userId     String?\n+  clerkId     String?\n   board      Board     @relation(\"BoardColumn\", fields: [board_uuid], references: [uuid], onDelete: Cascade)\n   tasks      Task[]    @relation(\"ColumnTask\")\n \n   @@index([board_uuid])\n }\n+\n model Task {\n   id          Int       @id @default(autoincrement())\n   uuid        String    @unique @db.Char(36)\n   created_at  DateTime? @default(now()) @db.Timestamp(0)\n@@ -69,23 +72,24 @@\n   name        String    @db.VarChar(255)\n   description String?   @db.VarChar(1023)\n   position    Int\n   column_uuid String\n-  userId      String\n+  clerkId      String\n   column      Column    @relation(\"ColumnTask\", fields: [column_uuid], references: [uuid], onDelete: Cascade)\n   subtasks    Subtask[] @relation(\"TaskSubtask\")\n \n   @@index([column_uuid])\n }\n+\n model Subtask {\n   id         Int       @id @default(autoincrement())\n   uuid       String    @unique @db.Char(36)\n   created_at DateTime? @default(now()) @db.Timestamp(0)\n   updated_at DateTime? @default(now()) @db.Timestamp(0)\n   name       String    @db.VarChar(255)\n   task_uuid  String\n   completed  Boolean   @default(false)\n-  userId     String\n+  clerkId     String\n   task       Task      @relation(\"TaskSubtask\", fields: [task_uuid], references: [uuid], onDelete: Cascade)\n \n   @@index([task_uuid])\n }\n@@ -107,13 +111,14 @@\n   flowPath          String?\n   cronPath          String?\n   createdAt         DateTime @default(now())\n   updatedAt         DateTime @updatedAt\n-  \n+\n   user   User   @relation(fields: [userId], references: [clerkId])\n   userId String\n+  board   Board?  @relation(\"BoardToWorkflow\", fields: [boardId], references: [uuid], onDelete: Cascade)\n+boardId String? @unique \n   \n-  board   Board? @relation(\"BoardWorkflow\")\n }\n \n model LocalGoogleCredential {\n   id          String @id @default(uuid())\n@@ -131,16 +136,16 @@\n   user   User   @relation(fields: [userId], references: [clerkId])\n }\n \n model DiscordWebhook {\n-  id          String        @id @default(uuid())\n-  webhookId   String        @unique\n-  url         String        @unique\n+  id          String       @id @default(uuid())\n+  webhookId   String       @unique\n+  url         String       @unique\n   name        String\n   guildName   String\n   guildId     String\n-  channelId   String        @unique\n-  user        User          @relation(fields: [userId], references: [clerkId])\n+  channelId   String       @unique\n+  user        User         @relation(fields: [userId], references: [clerkId])\n   userId      String\n   connections Connection[]\n }\n \n@@ -154,21 +159,21 @@\n   botUserId        String\n   teamId           String\n   teamName         String\n \n-  user        User          @relation(fields: [userId], references: [clerkId])\n+  user        User         @relation(fields: [userId], references: [clerkId])\n   userId      String\n   connections Connection[]\n }\n \n model Notion {\n-  id            String        @id @default(uuid())\n-  accessToken   String        @unique\n-  workspaceId   String        @unique\n-  databaseId    String        @unique\n+  id            String       @id @default(uuid())\n+  accessToken   String       @unique\n+  workspaceId   String       @unique\n+  databaseId    String       @unique\n   workspaceName String\n   workspaceIcon String\n-  user          User          @relation(fields: [userId], references: [clerkId])\n+  user          User         @relation(fields: [userId], references: [clerkId])\n   userId        String\n   connections   Connection[]\n }\n \n@@ -176,91 +181,12 @@\n   id               String          @id @default(uuid())\n   type             String\n   discordWebhook   DiscordWebhook? @relation(fields: [discordWebhookId], references: [id])\n   discordWebhookId String?         @unique\n-  notion          Notion?         @relation(fields: [notionId], references: [id])\n-  notionId        String?         @unique\n-  user            User?           @relation(fields: [userId], references: [clerkId])\n-  userId          String?\n-  slack           Slack?          @relation(fields: [slackId], references: [id])\n-  slackId         String?         @unique\n+  notion           Notion?         @relation(fields: [notionId], references: [id])\n+  notionId         String?         @unique\n+  user             User?           @relation(fields: [userId], references: [clerkId])\n+  userId           String?\n+  slack            Slack?          @relation(fields: [slackId], references: [id])\n+  slackId          String?         @unique\n }\n-// This is your Prisma schema file,\n-// learn more about it in the docs: https://pris.ly/d/prisma-schema\n \n-// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n-// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n-\n-generator client {\n-  provider = \"prisma-client-js\"\n-}\n-\n-datasource db {\n-  provider = \"postgresql\"\n-  url      = env(\"DATABASE_URL\")\n-}\n-model User {\n-  id          String    @id @default(uuid())\n-  clerkId     String    @unique\n-  name        String?\n-  email       String    @unique\n-  profileImage String?\n-  createdAt   DateTime  @default(now())\n-  updatedAt   DateTime  @updatedAt\n-  boards      Board[]\n-}\n-model Board {\n-  id         Int       @id @default(autoincrement())\n-  uuid       String    @unique @db.Char(36)\n-  created_at DateTime? @default(now()) @db.Timestamp(0)\n-  updated_at DateTime? @default(now()) @db.Timestamp(0)\n-  name       String    @db.VarChar(255)\n-  userId     String\n-  columns    Column[]  @relation(\"BoardColumn\")\n-  user       User?      @relation(fields: [userId], references: [id])\n-\n-  @@index([userId])\n-}\n-model Column {\n-  id         Int       @id @default(autoincrement())\n-  uuid       String    @unique @db.Char(36)\n-  created_at DateTime? @default(now()) @db.Timestamp(0)\n-  updated_at DateTime? @default(now()) @db.Timestamp(0)\n-  name       String    @db.VarChar(255)\n-  board_uuid String\n-  position   Int\n-  color      String    @db.VarChar(255)\n-  userId     String?\n-  board      Board     @relation(\"BoardColumn\", fields: [board_uuid], references: [uuid], onDelete: Cascade)\n-  tasks      Task[]    @relation(\"ColumnTask\")\n-\n-  @@index([board_uuid])\n-}\n-model Task {\n-  id          Int       @id @default(autoincrement())\n-  uuid        String    @unique @db.Char(36)\n-  created_at  DateTime? @default(now()) @db.Timestamp(0)\n-  updated_at  DateTime? @default(now()) @db.Timestamp(0)\n-  name        String    @db.VarChar(255)\n-  description String?   @db.VarChar(1023)\n-  position    Int\n-  column_uuid String\n-  userId      String\n-  column      Column    @relation(\"ColumnTask\", fields: [column_uuid], references: [uuid], onDelete: Cascade)\n-  subtasks    Subtask[] @relation(\"TaskSubtask\")\n-\n-  @@index([column_uuid])\n-}\n-model Subtask {\n-  id         Int       @id @default(autoincrement())\n-  uuid       String    @unique @db.Char(36)\n-  created_at DateTime? @default(now()) @db.Timestamp(0)\n-  updated_at DateTime? @default(now()) @db.Timestamp(0)\n-  name       String    @db.VarChar(255)\n-  task_uuid  String\n-  completed  Boolean   @default(false)\n-  userId     String\n-  task       Task      @relation(\"TaskSubtask\", fields: [task_uuid], references: [uuid], onDelete: Cascade)\n-\n-  @@index([task_uuid])\n-}\n-\n"
                },
                {
                    "date": 1740916023233,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,192 @@\n+// This is your Prisma schema file,\n+// learn more about it in the docs: https://pris.ly/d/prisma-schema\n+\n+// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n+// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n+\n+generator client {\n+  provider = \"prisma-client-js\"\n+}\n+\n+datasource db {\n+  provider = \"postgresql\"\n+  url      = env(\"DATABASE_URL\")\n+}\n+\n+model User {\n+  id               String                 @id @default(uuid())\n+  clerkId          String                 @unique\n+  name             String?\n+  email            String                 @unique\n+  profileImage     String?\n+  createdAt        DateTime               @default(now())\n+  updatedAt        DateTime               @updatedAt\n+  boards           Board[]\n+  workflows        Workflow[]\n+  localGoogleId    String?                @unique\n+  googleResourceId String?                @unique\n+  credentials      LocalGoogleCredential?\n+  discordWebhooks  DiscordWebhook[]\n+  notionAccounts   Notion[]\n+  slackAccounts    Slack[]\n+  connections      Connection[]\n+}\n+\n+model Board {\n+  id         Int       @id @default(autoincrement())\n+  uuid       String    @unique @db.Char(36)\n+  created_at DateTime? @default(now()) @db.Timestamp(0)\n+  updated_at DateTime? @default(now()) @db.Timestamp(0)\n+  name       String    @db.VarChar(255)\n+  clerkId     String\n+  columns    Column[]  @relation(\"BoardColumn\")\n+  user       User?     @relation(fields: [clerkId], references: [clerkId])\n+\n+  workflow   Workflow? @relation(\"BoardToWorkflow\")\n+workflowId String?   @unique\n+\n+  @@index([clerkId])\n+}\n+\n+model Column {\n+  id         Int       @id @default(autoincrement())\n+  uuid       String    @unique @db.Char(36)\n+  created_at DateTime? @default(now()) @db.Timestamp(0)\n+  updated_at DateTime? @default(now()) @db.Timestamp(0)\n+  name       String    @db.VarChar(255)\n+  board_uuid String\n+  position   Int\n+  color      String    @db.VarChar(255)\n+  clerkId     String?\n+  board      Board     @relation(\"BoardColumn\", fields: [board_uuid], references: [uuid], onDelete: Cascade)\n+  tasks      Task[]    @relation(\"ColumnTask\")\n+\n+  @@index([board_uuid])\n+}\n+\n+model Task {\n+  id          Int       @id @default(autoincrement())\n+  uuid        String    @unique @db.Char(36)\n+  created_at  DateTime? @default(now()) @db.Timestamp(0)\n+  updated_at  DateTime? @default(now()) @db.Timestamp(0)\n+  name        String    @db.VarChar(255)\n+  description String?   @db.VarChar(1023)\n+  position    Int\n+  column_uuid String\n+  // clerkId      String\n+  column      Column    @relation(\"ColumnTask\", fields: [column_uuid], references: [uuid], onDelete: Cascade)\n+  subtasks    Subtask[] @relation(\"TaskSubtask\")\n+\n+  @@index([column_uuid])\n+}\n+\n+model Subtask {\n+  id         Int       @id @default(autoincrement())\n+  uuid       String    @unique @db.Char(36)\n+  created_at DateTime? @default(now()) @db.Timestamp(0)\n+  updated_at DateTime? @default(now()) @db.Timestamp(0)\n+  name       String    @db.VarChar(255)\n+  task_uuid  String\n+  completed  Boolean   @default(false)\n+  // clerkId     String\n+  task       Task      @relation(\"TaskSubtask\", fields: [task_uuid], references: [uuid], onDelete: Cascade)\n+\n+  @@index([task_uuid])\n+}\n+\n+model Workflow {\n+  id                String   @id @default(uuid())\n+  name              String\n+  description       String\n+  nodes             String?\n+  edges             String?\n+  publish           Boolean  @default(false)\n+  discordTemplate   String?\n+  notionTemplate    String?\n+  slackTemplate     String?\n+  slackChannels     String[]\n+  slackAccessToken  String?\n+  notionAccessToken String?\n+  notionDbId        String?\n+  flowPath          String?\n+  cronPath          String?\n+  createdAt         DateTime @default(now())\n+  updatedAt         DateTime @updatedAt\n+\n+  user   User   @relation(fields: [userId], references: [clerkId])\n+  userId String\n+  board   Board?  @relation(\"BoardToWorkflow\", fields: [boardId], references: [uuid], onDelete: Cascade)\n+boardId String? @unique \n+  \n+}\n+\n+model LocalGoogleCredential {\n+  id          String @id @default(uuid())\n+  accessToken String @unique\n+\n+  folderId   String?\n+  pageToken  String?\n+  channelId  String  @unique @default(uuid())\n+  subscribed Boolean @default(false)\n+\n+  createdAt DateTime @default(now())\n+  updatedAt DateTime @updatedAt\n+\n+  userId String @unique\n+  user   User   @relation(fields: [userId], references: [clerkId])\n+}\n+\n+model DiscordWebhook {\n+  id          String       @id @default(uuid())\n+  webhookId   String       @unique\n+  url         String       @unique\n+  name        String\n+  guildName   String\n+  guildId     String\n+  channelId   String       @unique\n+  user        User         @relation(fields: [userId], references: [clerkId])\n+  userId      String\n+  connections Connection[]\n+}\n+\n+model Slack {\n+  id String @id @default(uuid())\n+\n+  appId            String\n+  authedUserId     String\n+  authedUserToken  String @unique\n+  slackAccessToken String @unique\n+  botUserId        String\n+  teamId           String\n+  teamName         String\n+\n+  user        User         @relation(fields: [userId], references: [clerkId])\n+  userId      String\n+  connections Connection[]\n+}\n+\n+model Notion {\n+  id            String       @id @default(uuid())\n+  accessToken   String       @unique\n+  workspaceId   String       @unique\n+  databaseId    String       @unique\n+  workspaceName String\n+  workspaceIcon String\n+  user          User         @relation(fields: [userId], references: [clerkId])\n+  userId        String\n+  connections   Connection[]\n+}\n+\n+model Connection {\n+  id               String          @id @default(uuid())\n+  type             String\n+  discordWebhook   DiscordWebhook? @relation(fields: [discordWebhookId], references: [id])\n+  discordWebhookId String?         @unique\n+  notion           Notion?         @relation(fields: [notionId], references: [id])\n+  notionId         String?         @unique\n+  user             User?           @relation(fields: [userId], references: [clerkId])\n+  userId           String?\n+  slack            Slack?          @relation(fields: [slackId], references: [id])\n+  slackId          String?         @unique\n+}\n+\n"
                }
            ],
            "date": 1716732651144,
            "name": "Commit-0",
            "content": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\ngenerator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}"
        }
    ]
}